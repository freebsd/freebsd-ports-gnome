--- Makefile.in.orig	2010-09-11 13:45:26 UTC
+++ Makefile.in
@@ -38,22 +38,22 @@ INIFILES = jk_check.ini jk_init.ini jk_lsh.ini jk_sock
 jailkit: all
 
 all:
-	@cd src/ && $(MAKE) all
-	@cd py/ && $(MAKE) all
-	@cd man/ && $(MAKE) all
+	$(MAKE) -C src all
+	$(MAKE) -C py all
+	$(MAKE) -C man all
 
 clean:
 	rm -f core *~ ini/*~
-	@cd src/ && $(MAKE) clean
-	@cd py/ && $(MAKE) clean
-	@cd man/ && $(MAKE) clean
+	$(MAKE) -C src clean
+	$(MAKE) -C py clean
+	$(MAKE) -C man clean
 
 distclean: clean
 	rm -rf autom4te.cache/
 	rm -f Makefile config.log config.status config.cache
-	@cd src/ && $(MAKE) distclean
-	@cd py/ && $(MAKE) distclean
-	@cd man/ && $(MAKE) distclean
+	$(MAKE) -C src distclean
+	$(MAKE) -C py distclean
+	$(MAKE) -C man distclean
 
 install:
 	${INSTALL} -d -m 755 ${DESTDIR}${iniprefix}
@@ -64,24 +64,13 @@ install:
 			${INSTALL} -m 0644 ini/$${file} ${DESTDIR}${iniprefix} ;\
 		fi ;\
 	done
-	@cd src/ && $(MAKE) install
-	@cd py/ && $(MAKE) install
-	@cd man/ && $(MAKE) install
-	# test if the jk_chrootsh is already in /etc/shells
-	# this previously had @echo but that fails on FreeBSD
-	if test -w /etc/shells; then \
-		if ! grep ${prefix}/sbin/jk_chrootsh /etc/shells ; then \
-			echo "appending ${prefix}/sbin/jk_chroots to /etc/shells";\
-			echo ${prefix}/sbin/jk_chrootsh >> /etc/shells ;\
-		fi \
-	fi
+	$(MAKE) -C src install
+	$(MAKE) -C py install
+	$(MAKE) -C man install
 
-
 uninstall:
 	rm -f ${iniprefix}/*.ini
-	@cd py/ && $(MAKE) uninstall
-	@cd man/ && $(MAKE) uninstall
-	@cd src/ && $(MAKE) uninstall
+	$(MAKE) -C py uninstall
+	$(MAKE) -C man uninstall
+	$(MAKE) -C src uninstall
 	-rmdir --ignore-fail-on-non-empty ${DESTDIR}${iniprefix}
-	@echo "You must manually remove jk_chrootsh from /etc/shells"
-# remove jk_chrootsh from /etc/shells
