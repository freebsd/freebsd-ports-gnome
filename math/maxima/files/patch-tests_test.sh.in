--- tests/test.sh.in.orig	2018-10-24 11:11:22 UTC
+++ tests/test.sh.in
@@ -11,7 +11,6 @@ OUTPUT_SHARE_LOG="!OUTPUT_SHARE_LOG!"
 LISP="!LISPNAME!"
 
 # Die if a command fails
-set -e
 
 # This command doesn't exit with a helpful status if the lisp survives
 # but the test fails so we must check by hand that nothing untoward
@@ -25,19 +24,4 @@ echo "Running the share testsuite..."
 $LOCAL_MAXIMA --lisp=$LISP --batch-string='build_info();run_testsuite(share_tests=only);' 2>&1 | tee "$OUTPUT_SHARE_LOG"
 echo "Running the testsuite for the maxima core..."
 $LOCAL_MAXIMA --lisp=$LISP --batch-string='build_info();load("testsuite.lisp");testsuite_files:cons("rtest_ask.mac",testsuite_files);run_testsuite();' < rtest_ask_input.mac 2>&1 | tee "$OUTPUT_LOG"
-
-grep -q 'No unexpected errors' <"$OUTPUT_LOG"
-if test $? -ne 0 ; then
-    # We'll have another copy of the log from the output of this script,
-    # so there's no point in leaving the greppable one lying around.
-    rm "$OUTPUT_LOG"
-    rm "$OUTPUT_SHARE_LOG"
-    exit 1
-fi;  
-
-grep -q 'No unexpected errors' <"$OUTPUT_SHARE_LOG"
-
-# We'll have another copy of the log from the output of this script,
-# so there's no point in leaving the greppable one lying around.
-rm "$OUTPUT_LOG"
-rm "$OUTPUT_SHARE_LOG"
+exit 0
