commit 5b5983d8528a
Author: Felipe Gomes <felipc@gmail.com>
Date:   Tue Oct 17 12:10:31 2017 -0200

    Bug 1405655 - Only hide Flash Activation overlay UI if the entire plugin is covered. r=dthayer, a=ritu
    
    As opposed to right now where we hide if any of the corners or the center of the plugin is covered.
    
    MozReview-Commit-ID: 9mOVXYyV1Il
    
    --HG--
    extra : source : a6aaaf9cb7d3a4f3baa430cfa88671f0acabed6c
---
 browser/base/content/test/plugins/browser.ini      |   2 +
 .../test/plugins/browser_CTP_shouldShowOverlay.js  |  56 ++++++++++
 .../test/plugins/plugin_shouldShowOverlay.html     | 116 +++++++++++++++++++++
 browser/modules/PluginContent.jsm                  |  13 ++-
 4 files changed, 180 insertions(+), 7 deletions(-)

diff --git browser/base/content/test/plugins/browser.ini browser/base/content/test/plugins/browser.ini
index 56f5fba1a9d0..9b3a518ecb7c 100644
--- browser/base/content/test/plugins/browser.ini
+++ browser/base/content/test/plugins/browser.ini
@@ -29,6 +29,7 @@ support-files =
   plugin_overlayed.html
   plugin_positioned.html
   plugin_simple_blank.swf
+  plugin_shouldShowOverlay.html
   plugin_small.html
   plugin_small_2.html
   plugin_syncRemoved.html
@@ -76,6 +77,7 @@ tags = blocklist
 tags = blocklist
 [browser_CTP_resize.js]
 tags = blocklist
+[browser_CTP_shouldShowOverlay.js]
 [browser_CTP_zoom.js]
 tags = blocklist
 [browser_blocking.js]
diff --git browser/base/content/test/plugins/browser_CTP_shouldShowOverlay.js browser/base/content/test/plugins/browser_CTP_shouldShowOverlay.js
new file mode 100644
index 000000000000..6af674a0e5b2
--- /dev/null
+++ browser/base/content/test/plugins/browser_CTP_shouldShowOverlay.js
@@ -0,0 +1,56 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+"use strict";
+
+/* This test ensures that the click-to-play "Activate Plugin" overlay
+ * is shown when expected.
+ * All testcases are in the plugin_shouldShowOverlay.html file.
+ */
+
+var rootDir = getRootDirectory(gTestPath);
+const gTestRoot = rootDir.replace("chrome://mochitests/content/", "http://127.0.0.1:8888/");
+
+var gTestBrowser = null;
+
+add_task(async function() {
+  registerCleanupFunction(function() {
+    clearAllPluginPermissions();
+    setTestPluginEnabledState(Ci.nsIPluginTag.STATE_ENABLED, "Test Plug-in");
+    gBrowser.removeCurrentTab();
+    gTestBrowser = null;
+  });
+});
+
+add_task(async function() {
+  gBrowser.selectedTab = BrowserTestUtils.addTab(gBrowser);
+  gTestBrowser = gBrowser.selectedBrowser;
+
+  setTestPluginEnabledState(Ci.nsIPluginTag.STATE_CLICKTOPLAY, "Test Plug-in");
+
+  let popupNotification = PopupNotifications.getNotification("click-to-play-plugins", gTestBrowser);
+  ok(!popupNotification, "Sanity check, should not have a click-to-play notification");
+
+  await promiseTabLoadEvent(gBrowser.selectedTab, gTestRoot + "plugin_shouldShowOverlay.html");
+
+  // Work around for delayed PluginBindingAttached
+  await promiseUpdatePluginBindings(gTestBrowser);
+
+  await ContentTask.spawn(gTestBrowser, null, async function() {
+    let doc = content.document;
+    let testcases = doc.querySelectorAll(".testcase");
+
+    for (let testcase of testcases) {
+      let plugin = testcase.querySelector("object");
+      Assert.ok(plugin, `plugin exists in ${testcase.id}`);
+
+      let overlay = doc.getAnonymousElementByAttribute(plugin, "anonid", "main");
+      Assert.ok(overlay, `overlay exists in ${testcase.id}`);
+
+      let expectedVisibility = (testcase.getAttribute("shouldshow") == "true");
+      Assert.ok(overlay.classList.contains("visible") == expectedVisibility,
+                `The expected visibility is correct in ${testcase.id}`);
+    }
+  })
+});
diff --git browser/base/content/test/plugins/plugin_shouldShowOverlay.html browser/base/content/test/plugins/plugin_shouldShowOverlay.html
new file mode 100644
index 000000000000..24d07d164260
--- /dev/null
+++ browser/base/content/test/plugins/plugin_shouldShowOverlay.html
@@ -0,0 +1,116 @@
+<!DOCTYPE html>
+<html>
+<head>
+<meta charset="utf-8">
+<style>
+object {
+  width: 200px;
+  height: 200px;
+}
+
+.testcase {
+  position: relative;
+  margin-bottom: 5px;
+}
+
+.cover {
+  position: absolute;
+  width: 20px;
+  height: 20px;
+  background-color: green;
+}
+</style>
+</head>
+<body>
+
+  <div id="testcase1" class="testcase" shouldshow="true"
+       style="top: -100px">
+    <!-- Should show overlay even though the top part is outside
+       of the page. -->
+    <object type="application/x-test"></object>
+  </div>
+
+  <div id="testcase2" class="testcase" shouldshow="true"
+       style="left: -100px">
+    <!-- Should show overlay even though the left part is outside
+       of the page. -->
+    <object type="application/x-test"></object>
+  </div>
+
+  <div id="testcase3" class="testcase" shouldshow="false"
+       style="left: -210px">
+    <!-- The object is entirely outside of the page, so the overlay
+         should NOT show. -->
+    <object type="application/x-test"></object>
+  </div>
+
+  <div id="testcase4" class="testcase" shouldshow="true">
+    <!-- Should show overlay even though the top-left corner is covered. -->
+    <div class="cover" style="top: 0; left: 0"></div>
+    <object type="application/x-test"></object>
+  </div>
+
+  <div id="testcase5" class="testcase" shouldshow="true">
+    <!-- Should show overlay even though the top-right corner is covered. -->
+    <div class="cover" style="top: 0; left: 180px"></div>
+    <object type="application/x-test"></object>
+  </div>
+
+  <div id="testcase6" class="testcase" shouldshow="true">
+    <!-- Should show overlay even though the bottom-left corner is covered. -->
+    <div class="cover" style="top: 180px; left: 0"></div>
+    <object type="application/x-test"></object>
+  </div>
+
+
+  <div id="testcase7" class="testcase" shouldshow="true">
+    <!-- Should show overlay even though the bottom-right corner is covered. -->
+    <div class="cover" style="top: 180px; left: 180px"></div>
+    <object type="application/x-test"></object>
+  </div>
+
+  <div id="testcase8" class="testcase" shouldshow="true">
+    <!-- Should show overlay even though the center is covered. -->
+    <div class="cover" style="top: 90px; left: 90px"></div>
+    <object type="application/x-test"></object>
+  </div>
+
+  <div id="testcase9" class="testcase" shouldshow="true">
+    <!-- Should show overlay even though multiple points are covered,
+       but not all of them. -->
+    <div class="cover" style="top: 0; left: 0"></div>
+    <div class="cover" style="top: 0; left: 180px"></div>
+    <div class="cover" style="top: 180px; left: 0"></div>
+    <div class="cover" style="top: 180px; left: 180px"></div>
+    <object type="application/x-test"></object>
+  </div>
+
+  <div id="testcase10" class="testcase" shouldshow="true">
+    <!-- Another case where 4 are covered, but not all. -->
+    <div class="cover" style="top: 90px; left: 90px"></div>
+    <div class="cover" style="top: 0; left: 180px"></div>
+    <div class="cover" style="top: 180px; left: 0"></div>
+    <div class="cover" style="top: 180px; left: 180px"></div>
+    <object type="application/x-test"></object>
+  </div>
+
+  <div id="testcase11" class="testcase" shouldshow="false">
+    <!-- All corners and center are covered here, so in this
+         case the overlay should NOT show. -->
+    <div class="cover" style="top: 0; left: 0"></div>
+    <div class="cover" style="top: 0; left: 180px"></div>
+    <div class="cover" style="top: 180px; left: 0"></div>
+    <div class="cover" style="top: 180px; left: 180px"></div>
+    <div class="cover" style="top: 90px; left: 90px"></div>
+    <object type="application/x-test"></object>
+  </div>
+
+  <div id="testcase12" class="testcase" shouldshow="false">
+        <!-- All corners and center are covered here, by a single
+        element. In this case the overlay should NOT show. -->
+    <div class="cover" style="width: 200px; height:200px"></div>
+    <object type="application/x-test"></object>
+  </div>
+
+</body>
+</html>
diff --git browser/modules/PluginContent.jsm browser/modules/PluginContent.jsm
index 678369d7e3ec..6aec465a2955 100644
--- browser/modules/PluginContent.jsm
+++ browser/modules/PluginContent.jsm
@@ -330,22 +330,21 @@ PluginContent.prototype = {
                    [right, bottom],
                    [centerX, centerY]];
 
-    if (right <= 0 || top <= 0) {
-      return false;
-    }
-
     let contentWindow = plugin.ownerGlobal;
     let cwu = contentWindow.QueryInterface(Ci.nsIInterfaceRequestor)
                            .getInterface(Ci.nsIDOMWindowUtils);
 
     for (let [x, y] of points) {
+      if (x < 0 || y < 0) {
+        continue;
+      }
       let el = cwu.elementFromPoint(x, y, true, true);
-      if (el !== plugin) {
-        return false;
+      if (el === plugin) {
+        return true;
       }
     }
 
-    return true;
+    return false;
   },
 
   addLinkClickCallback(linkNode, callbackName /* callbackArgs...*/) {
