commit ad103dfd3abe
Author: Prathiksha <prathikshaprasadsuman@gmail.com>
Date:   Fri Sep 15 22:08:12 2017 +0530

    Bug 1357523 - Make about:home and about:newtab search box search for the value in the search textbox when we use non-default search engines. r=nhnt11, a=ritu
    
    MozReview-Commit-ID: CdgqghkmXau
    
    --HG--
    extra : source : e029590936c56ac269d68610ab389ab25887b6e1
---
 browser/base/content/contentSearchUI.js            |  2 ++
 .../test/general/browser_contentSearchUI.js        | 30 +++++-----------------
 2 files changed, 9 insertions(+), 23 deletions(-)

diff --git browser/base/content/contentSearchUI.js browser/base/content/contentSearchUI.js
index bacb985fb6ee..ffada60c3571 100644
--- browser/base/content/contentSearchUI.js
+++ browser/base/content/contentSearchUI.js
@@ -478,6 +478,8 @@ ContentSearchUIController.prototype = {
   _onMousemove(event) {
     let idx = this._indexOfTableItem(event.target);
     if (idx >= this.numSuggestions) {
+      // Deselect any search suggestion that has been selected.
+      this.selectedIndex = -1;
       this.selectedButtonIndex = idx - this.numSuggestions;
       return;
     }
diff --git browser/base/content/test/general/browser_contentSearchUI.js browser/base/content/test/general/browser_contentSearchUI.js
index 51538b29e27f..85b65d40bf0b 100644
--- browser/base/content/test/general/browser_contentSearchUI.js
+++ browser/base/content/test/general/browser_contentSearchUI.js
@@ -300,13 +300,13 @@ add_task(async function mouse() {
   checkState(state, "x", ["xfoo", "xbar"], 1);
 
   state = await msg("mousemove", 2);
-  checkState(state, "x", ["xfoo", "xbar"], 1, 0);
+  checkState(state, "x", ["xfoo", "xbar"], 2, 0);
 
   state = await msg("mousemove", 3);
-  checkState(state, "x", ["xfoo", "xbar"], 1, 1);
+  checkState(state, "x", ["xfoo", "xbar"], 3, 1);
 
   state = await msg("mousemove", -1);
-  checkState(state, "x", ["xfoo", "xbar"], 1);
+  checkState(state, "x", ["xfoo", "xbar"], -1);
 
   await msg("reset");
   await setUp();
@@ -318,10 +318,10 @@ add_task(async function mouse() {
   checkState(state, "x", ["xfoo", "xbar"], 0);
 
   state = await msg("mousemove", 2);
-  checkState(state, "x", ["xfoo", "xbar"], 0, 0);
+  checkState(state, "x", ["xfoo", "xbar"], 2, 0);
 
   state = await msg("mousemove", -1);
-  checkState(state, "x", ["xfoo", "xbar"], 0);
+  checkState(state, "x", ["xfoo", "xbar"], -1);
 
   await msg("reset");
 });
@@ -510,24 +510,7 @@ add_task(async function search() {
   await setUp();
 
   // Test selecting a suggestion, then clicking a one-off without deselecting the
-  // suggestion.
-  await msg("key", { key: "x", waitForSuggestions: true });
-  p = msg("waitForSearch");
-  await msg("mousemove", 1);
-  await msg("mousemove", 3);
-  await msg("click", { eltIdx: 3, modifiers });
-  mesg = await p;
-  eventData.searchString = "xfoo"
-  eventData.selection = {
-    index: 1,
-    kind: "mouse",
-  };
-  SimpleTest.isDeeply(eventData, mesg, "Search event data");
-
-  await promiseTab();
-  await setUp();
-
-  // Same as above, but with the keyboard.
+  // suggestion, using the keyboard.
   delete modifiers.button;
   await msg("key", { key: "x", waitForSuggestions: true });
   p = msg("waitForSearch");
@@ -536,6 +519,7 @@ add_task(async function search() {
   await msg("key", "VK_TAB");
   await msg("key", { key: "VK_RETURN", modifiers });
   mesg = await p;
+  eventData.searchString = "xfoo";
   eventData.selection = {
     index: 1,
     kind: "key",
