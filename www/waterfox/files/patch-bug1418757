commit 1b3df31dd202
Author: Gijs Kruitbosch <gijskruitbosch@gmail.com>
Date:   Wed Nov 22 13:49:07 2017 +0000

    Bug 1418757 - new tab button isn't adjacent to the last tab when customizing in customize mode, r=jaws a=gchang
    
    MozReview-Commit-ID: bQoNfDD2sX
    
    --HG--
    extra : histedit_source : 15b29e1c8e8ba295ecbd76d266de3611862a72c3
---
 browser/base/content/tabbrowser.xml                |  15 ++-
 browser/components/customizableui/test/browser.ini |   1 +
 .../test/browser_newtab_button_customizemode.js    | 106 +++++++++++++++++++++
 3 files changed, 121 insertions(+), 1 deletion(-)

diff --git browser/base/content/tabbrowser.xml browser/base/content/tabbrowser.xml
index dc4560e0f5b2..a13df7715f2d 100644
--- browser/base/content/tabbrowser.xml
+++ browser/base/content/tabbrowser.xml
@@ -5448,10 +5448,23 @@
 
       <method name="_updateNewTabVisibility">
         <body><![CDATA[
+          let isCustomizing = this.tabContainer.parentNode.getAttribute("customizing") == "true";
+
+          // Confusingly, the <tabs> are never wrapped in <toolbarpaletteitem>s in customize mode,
+          // but the other items will be.
           let sib = this.tabContainer.nextElementSibling;
+          if (isCustomizing) {
+            sib = sib && sib.firstElementChild;
+          }
           while (sib && sib.hidden) {
-            sib = sib.nextElementSibling;
+            if (isCustomizing) {
+              sib = sib.parentNode.nextElementSibling;
+              sib = sib && sib.firstElementChild;
+            } else {
+              sib = sib.nextElementSibling;
+            }
           }
+
           const kAttr = "hasadjacentnewtabbutton";
           if (sib && sib.id == "new-tab-button") {
             this.tabContainer.setAttribute(kAttr, "true");
diff --git browser/components/customizableui/test/browser.ini browser/components/customizableui/test/browser.ini
index d5f5eaf2a113..b164a573f094 100644
--- browser/components/customizableui/test/browser.ini
+++ browser/components/customizableui/test/browser.ini
@@ -164,6 +164,7 @@ tags = fullscreen
 [browser_check_tooltips_in_navbar.js]
 [browser_editcontrols_update.js]
 subsuite = clipboard
+[browser_newtab_button_customizemode.js]
 [browser_photon_customization_context_menus.js]
 [browser_sidebar_toggle.js]
 [browser_remote_tabs_button.js]
diff --git browser/components/customizableui/test/browser_newtab_button_customizemode.js browser/components/customizableui/test/browser_newtab_button_customizemode.js
new file mode 100644
index 000000000000..da886fc47376
--- /dev/null
+++ browser/components/customizableui/test/browser_newtab_button_customizemode.js
@@ -0,0 +1,106 @@
+/* Any copyright is dedicated to the Public Domain.
+ * http://creativecommons.org/publicdomain/zero/1.0/ */
+
+"use strict";
+
+/**
+ * Tests in this file check that user customizations to the tabstrip show
+ * the correct type of new tab button while the tabstrip isn't overflowing.
+ */
+
+const kGlobalNewTabButton = document.getElementById("new-tab-button");
+const kInnerNewTabButton = document.getAnonymousElementByAttribute(gBrowser.tabContainer, "anonid", "tabs-newtab-button");
+
+function assertNewTabButton(which) {
+  if (which == "global") {
+    isnot(kGlobalNewTabButton.getBoundingClientRect().width, 0,
+      "main new tab button should be visible");
+    is(kInnerNewTabButton.getBoundingClientRect().width, 0,
+      "inner new tab button should be hidden");
+  } else if (which == "inner") {
+    is(kGlobalNewTabButton.getBoundingClientRect().width, 0,
+      "main new tab button should be hidden");
+    isnot(kInnerNewTabButton.getBoundingClientRect().width, 0,
+      "inner new tab button should be visible");
+  } else {
+    ok(false, "Unexpected button: " + which);
+  }
+}
+
+/**
+ * Add and remove items *after* the new tab button in customize mode.
+ */
+add_task(async function addremove_after_newtab_customizemode() {
+  await startCustomizing();
+  simulateItemDrag(document.getElementById("home-button"),
+                   kGlobalNewTabButton.parentNode.nextElementSibling);
+  ok(gBrowser.tabContainer.hasAttribute("hasadjacentnewtabbutton"),
+    "tabs should have the adjacent newtab attribute");
+  await endCustomizing();
+  assertNewTabButton("inner");
+
+  await startCustomizing();
+  simulateItemDrag(document.getElementById("home-button"),
+    document.getElementById("stop-reload-button").parentNode.nextElementSibling);
+  ok(gBrowser.tabContainer.hasAttribute("hasadjacentnewtabbutton"),
+    "tabs should still have the adjacent newtab attribute");
+  await endCustomizing();
+  assertNewTabButton("inner");
+  ok(CustomizableUI.inDefaultState, "Should be in default state");
+});
+
+/**
+ * Add and remove items *before* the new tab button in customize mode.
+ */
+add_task(async function addremove_before_newtab_customizemode() {
+  await startCustomizing();
+  simulateItemDrag(document.getElementById("home-button"), kGlobalNewTabButton);
+  ok(!gBrowser.tabContainer.hasAttribute("hasadjacentnewtabbutton"),
+    "tabs should no longer have the adjacent newtab attribute");
+  await endCustomizing();
+  assertNewTabButton("global");
+  await startCustomizing();
+  simulateItemDrag(document.getElementById("home-button"),
+    document.getElementById("stop-reload-button").parentNode.nextElementSibling);
+  ok(gBrowser.tabContainer.hasAttribute("hasadjacentnewtabbutton"),
+    "tabs should have the adjacent newtab attribute again");
+  await endCustomizing();
+  assertNewTabButton("inner");
+  ok(CustomizableUI.inDefaultState, "Should be in default state");
+});
+
+/**
+ * Add and remove items *after* the new tab button outside of customize mode.
+ */
+add_task(async function addremove_after_newtab_api() {
+  CustomizableUI.addWidgetToArea("home-button", "TabsToolbar");
+  ok(gBrowser.tabContainer.hasAttribute("hasadjacentnewtabbutton"),
+    "tabs should have the adjacent newtab attribute");
+  assertNewTabButton("inner");
+
+  CustomizableUI.reset();
+  ok(gBrowser.tabContainer.hasAttribute("hasadjacentnewtabbutton"),
+    "tabs should still have the adjacent newtab attribute");
+  assertNewTabButton("inner");
+  ok(CustomizableUI.inDefaultState, "Should be in default state");
+
+});
+
+/**
+ * Add and remove items *before* the new tab button outside of customize mode.
+ */
+add_task(async function addremove_before_newtab_api() {
+  let index = CustomizableUI.getWidgetIdsInArea("TabsToolbar").indexOf("new-tab-button");
+  CustomizableUI.addWidgetToArea("home-button", "TabsToolbar", index);
+  ok(!gBrowser.tabContainer.hasAttribute("hasadjacentnewtabbutton"),
+    "tabs should no longer have the adjacent newtab attribute");
+  assertNewTabButton("global");
+
+  CustomizableUI.removeWidgetFromArea("home-button");
+  ok(gBrowser.tabContainer.hasAttribute("hasadjacentnewtabbutton"),
+    "tabs should have the adjacent newtab attribute again");
+  assertNewTabButton("inner");
+
+  CustomizableUI.reset();
+  ok(CustomizableUI.inDefaultState, "Should be in default state");
+});
