commit 2506c20ded5b
Author: Alex Chronopoulos <achronop@gmail.com>
Date:   Wed Dec 20 09:21:40 2017 -0500

    Bug 1423770. r=padenot, a=jcristau
    
    --HG--
    extra : rebase_source : 6c9ad483fe1ef89966e1a2a1fac8a9bdb8bf43c8
---
 media/webrtc/signaling/src/mediapipeline/MediaPipeline.cpp | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git media/webrtc/signaling/src/mediapipeline/MediaPipeline.cpp media/webrtc/signaling/src/mediapipeline/MediaPipeline.cpp
index 5c2bcd16d017..2bb7203f85bd 100644
--- media/webrtc/signaling/src/mediapipeline/MediaPipeline.cpp
+++ media/webrtc/signaling/src/mediapipeline/MediaPipeline.cpp
@@ -518,6 +518,7 @@ public:
         packetizer_->Channels() != outputChannels) {
       // It's ok to drop the audio still in the packetizer here.
       packetizer_ = new AudioPacketizer<int16_t, int16_t>(audio_10ms, outputChannels);
+      packet_ = MakeUnique<int16_t[]>(audio_10ms * outputChannels);
     }
 
     packetizer_->Input(samples, chunk.mDuration);
@@ -525,8 +526,8 @@ public:
     while (packetizer_->PacketsAvailable()) {
       uint32_t samplesPerPacket = packetizer_->PacketSize() *
                                   packetizer_->Channels();
-      packetizer_->Output(packet_);
-      mConduit->SendAudioFrame(packet_, samplesPerPacket, rate, 0);
+      packetizer_->Output(packet_.get());
+      mConduit->SendAudioFrame(packet_.get(), samplesPerPacket, rate, 0);
     }
   }
 
@@ -555,7 +556,7 @@ protected:
   // Only accessed on mThread
   nsAutoPtr<AudioPacketizer<int16_t, int16_t>> packetizer_;
   // A buffer to hold a single packet of audio.
-  int16_t packet_[AUDIO_SAMPLE_BUFFER_MAX_BYTES / sizeof(int16_t)];
+  UniquePtr<int16_t[]> packet_;
 };
 
 static char kDTLSExporterLabel[] = "EXTRACTOR-dtls_srtp";
