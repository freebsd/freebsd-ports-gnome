commit 59e5b0881ec2
Author: Andrea Marchesini <amarchesini@mozilla.com>
Date:   Thu Sep 21 21:32:00 2017 +0200

    Bug 1401878 - Remove ServiceWorkers in SiteDataManager.jsm. r=bkelly, a=sledru
    
    --HG--
    extra : source : 04888373f12bd5d86ec3f4057c3a2f0b2240c963
    extra : intermediate-source : e2b1cd9fd4a66fc932d8f74cfe2b38c55b9a7a1e
---
 browser/components/preferences/SiteDataManager.jsm | 26 ++++++++++++++++++++++
 1 file changed, 26 insertions(+)

diff --git browser/components/preferences/SiteDataManager.jsm browser/components/preferences/SiteDataManager.jsm
index d6dd5c78656a..8f2ac2a34188 100644
--- browser/components/preferences/SiteDataManager.jsm
+++ browser/components/preferences/SiteDataManager.jsm
@@ -9,6 +9,9 @@ XPCOMUtils.defineLazyModuleGetter(this, "OfflineAppCacheHelper",
                                   "resource:///modules/offlineAppCache.jsm");
 XPCOMUtils.defineLazyModuleGetter(this, "ContextualIdentityService",
                                   "resource://gre/modules/ContextualIdentityService.jsm");
+XPCOMUtils.defineLazyServiceGetter(this, "serviceWorkerManager",
+                                   "@mozilla.org/serviceworkers/manager;1",
+                                   "nsIServiceWorkerManager");
 
 this.EXPORTED_SYMBOLS = [
   "SiteDataManager"
@@ -216,6 +219,19 @@ this.SiteDataManager = {
     }
   },
 
+  _removeServiceWorkers(site) {
+    let serviceWorkers = serviceWorkerManager.getAllRegistrations();
+    for (let i = 0; i < serviceWorkers.length; i++) {
+      let sw = serviceWorkers.queryElementAt(i, Ci.nsIServiceWorkerRegistrationInfo);
+      for (let principal of site.principals) {
+        if (sw.principal.equals(principal)) {
+          serviceWorkerManager.removeAndPropagate(sw.principal.URI.host);
+          break;
+        }
+      }
+    }
+  },
+
   remove(hosts) {
     let promises = [];
     let unknownHost = "";
@@ -225,6 +241,7 @@ this.SiteDataManager = {
         this._removePermission(site);
         this._removeAppCache(site);
         this._removeCookie(site);
+        this._removeServiceWorkers(site);
         promises.push(this._removeQuotaUsage(site));
       } else {
         unknownHost = host;
@@ -240,6 +257,14 @@ this.SiteDataManager = {
   },
 
   removeAll() {
+    // Iterate through the service workers and remove them.
+    let serviceWorkers = serviceWorkerManager.getAllRegistrations();
+    for (let i = 0; i < serviceWorkers.length; i++) {
+      let sw = serviceWorkers.queryElementAt(i, Ci.nsIServiceWorkerRegistrationInfo);
+      let host = sw.principal.URI.host;
+      serviceWorkerManager.removeAndPropagate(host);
+    }
+
     let promises = [];
     for (let site of this._sites.values()) {
       this._removePermission(site);
