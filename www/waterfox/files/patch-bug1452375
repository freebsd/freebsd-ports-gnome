commit 73284efb9ac4
Author: Jeff Muizelaar <jmuizelaar@mozilla.com>
Date:   Thu May 31 21:19:18 2018 -0400

    Bug 1452375 - ssse3-scaler: handle init failure. r=sotaro, a=abillings
    
    --HG--
    extra : amend_source : b9070901c9a52e7790db4e81ba093b08511bab6a
---
 gfx/2d/ssse3-scaler.c                |  8 +++++++-
 gfx/2d/ssse3-scaler.h                |  4 +++-
 gfx/layers/basic/BasicCompositor.cpp | 14 +++++++-------
 3 files changed, 17 insertions(+), 9 deletions(-)

diff --git gfx/2d/ssse3-scaler.c gfx/2d/ssse3-scaler.c
index 345844b841dc5..0a571e064dc31 100644
--- gfx/2d/ssse3-scaler.c
+++ gfx/2d/ssse3-scaler.c
@@ -37,6 +37,7 @@
 #include <tmmintrin.h>
 #include <stdint.h>
 #include <assert.h>
+#include "ssse3-scaler.h"
 
 typedef int32_t                 pixman_fixed_16_16_t;
 typedef pixman_fixed_16_16_t    pixman_fixed_t;
@@ -505,7 +506,7 @@ fail:
 /* scale the src from src_width/height to dest_width/height drawn
  * into the rectangle x,y width,height
  * src_stride and dst_stride are 4 byte units */
-void ssse3_scale_data(uint32_t *src, int src_width, int src_height, int src_stride,
+bool ssse3_scale_data(uint32_t *src, int src_width, int src_height, int src_stride,
                       uint32_t *dest, int dest_width, int dest_height,
                       int dest_stride,
                       int x, int y,
@@ -551,6 +552,10 @@ void ssse3_scale_data(uint32_t *src, int src_width, int src_height, int src_stri
     iter.data = NULL;
 
     ssse3_bilinear_cover_iter_init(&iter);
+
+    if (!iter.fini)
+      return false;
+
     if (iter.data) {
         for (int iy = 0; iy < height; iy++) {
             ssse3_fetch_bilinear_cover(&iter, NULL);
@@ -558,4 +563,5 @@ void ssse3_scale_data(uint32_t *src, int src_width, int src_height, int src_stri
         }
         ssse3_bilinear_cover_iter_fini(&iter);
     }
+    return true;
 }
diff --git gfx/2d/ssse3-scaler.h gfx/2d/ssse3-scaler.h
index b3b53ed643689..ea8d8a066303a 100644
--- gfx/2d/ssse3-scaler.h
+++ gfx/2d/ssse3-scaler.h
@@ -6,10 +6,12 @@
 #ifndef MOZILLA_GFX_2D_SSSE3_SCALER_H_
 #define MOZILLA_GFX_2D_SSSE3_SCALER_H_
 
+#include <stdbool.h>
+
 #ifdef __cplusplus
 extern "C" {
 #endif
-void ssse3_scale_data(uint32_t *src, int src_width, int src_height,
+bool ssse3_scale_data(uint32_t *src, int src_width, int src_height,
                 int src_stride,
                 uint32_t *dest, int dest_width, int dest_height,
                 int dest_rowstride,
diff --git gfx/layers/basic/BasicCompositor.cpp gfx/layers/basic/BasicCompositor.cpp
index 1ff27f7957301..634d9e3407f7b 100644
--- gfx/layers/basic/BasicCompositor.cpp
+++ gfx/layers/basic/BasicCompositor.cpp
@@ -470,15 +470,15 @@ AttemptVideoScale(TextureSourceBasic* aSource, const SourceSurface* aSourceMask,
     RefPtr<DataSourceSurface> srcSource = aSource->GetSurface(aDest)->GetDataSurface();
     DataSourceSurface::ScopedMap mapSrc(srcSource, DataSourceSurface::READ);
 
-    ssse3_scale_data((uint32_t*)mapSrc.GetData(), srcSource->GetSize().width, srcSource->GetSize().height,
-                     mapSrc.GetStride()/4,
-                     ((uint32_t*)dstData) + fillRect.x + (dstStride / 4) * fillRect.y, dstRect.width, dstRect.height,
-                     dstStride / 4,
-                     offset.x, offset.y,
-                     fillRect.width, fillRect.height);
+    bool success = ssse3_scale_data((uint32_t*)mapSrc.GetData(), srcSource->GetSize().width, srcSource->GetSize().height,
+                                    mapSrc.GetStride()/4,
+                                    ((uint32_t*)dstData) + fillRect.x + (dstStride / 4) * fillRect.y, dstRect.width, dstRect.height,
+                                    dstStride / 4,
+                                    offset.x, offset.y,
+                                    fillRect.width, fillRect.height);
 
     aDest->ReleaseBits(dstData);
-    return true;
+    return success;
   } else
 #endif // MOZILLA_SSE_HAVE_CPUID_DETECTION
     return false;

commit 083548141193 (origin/esr52)
Author: Jeff Muizelaar <jmuizelaar@mozilla.com>
Date:   Thu May 31 21:20:05 2018 -0400

    Bug 1452375 - ssse3-scaler: make sure iter->x/y is representable. r=sotaro, a=abillings
---
 gfx/2d/ssse3-scaler.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git gfx/2d/ssse3-scaler.c gfx/2d/ssse3-scaler.c
index 0a571e064dc31..745f58f6f8f43 100644
--- gfx/2d/ssse3-scaler.c
+++ gfx/2d/ssse3-scaler.c
@@ -45,6 +45,8 @@ typedef pixman_fixed_16_16_t    pixman_fixed_t;
 #define pixman_fixed_to_int(f)          ((int) ((f) >> 16))
 #define pixman_int_to_fixed(i)          ((pixman_fixed_t) ((i) << 16))
 #define pixman_double_to_fixed(d)       ((pixman_fixed_t) ((d) * 65536.0))
+#define PIXMAN_FIXED_INT_MAX 32767
+#define PIXMAN_FIXED_INT_MIN -32768
 typedef struct pixman_vector pixman_vector_t;
 
 typedef int pixman_bool_t;
@@ -464,6 +466,12 @@ ssse3_bilinear_cover_iter_init (pixman_iter_t *iter)
     bilinear_info_t *info;
     pixman_vector_t v;
 
+    if (iter->x > PIXMAN_FIXED_INT_MAX ||
+        iter->x < PIXMAN_FIXED_INT_MIN ||
+        iter->y > PIXMAN_FIXED_INT_MAX ||
+        iter->y < PIXMAN_FIXED_INT_MIN)
+      goto fail;
+
     /* Reference point is the center of the pixel */
     v.vector[0] = pixman_int_to_fixed (iter->x) + pixman_fixed_1 / 2;
     v.vector[1] = pixman_int_to_fixed (iter->y) + pixman_fixed_1 / 2;
