commit 8143391c68e1
Author: Steve Fink <sfink@mozilla.com>
Date:   Fri Jan 5 14:37:47 2018 -0800

    Bug 1434384 - Mark v1 structured clone data as cross-process. r=jorendorff, a=RyanVM
    
    --HG--
    extra : source : d85679eb427513cb18650f3d4e7d37a6ccbefbab
---
 js/src/vm/StructuredClone.cpp | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git js/src/vm/StructuredClone.cpp js/src/vm/StructuredClone.cpp
index 55b7fd76ea2d..f595132256e0 100644
--- js/src/vm/StructuredClone.cpp
+++ js/src/vm/StructuredClone.cpp
@@ -2374,12 +2374,14 @@ JSStructuredCloneReader::readHeader()
         return in.reportTruncated();
 
     if (tag != SCTAG_HEADER) {
-        // Old structured clone buffer. We must have read it from disk or
-        // somewhere, so we can assume it's scope-compatible.
+        // Old structured clone buffer. We must have read it from disk.
+        storedScope = JS::StructuredCloneScope::DifferentProcess;
         return true;
     }
 
     MOZ_ALWAYS_TRUE(in.readPair(&tag, &data));
+    storedScope = JS::StructuredCloneScope(data);
+
     if (data != uint32_t(JS::StructuredCloneScope::SameProcessSameThread) &&
         data != uint32_t(JS::StructuredCloneScope::SameProcessDifferentThread) &&
         data != uint32_t(JS::StructuredCloneScope::DifferentProcess))
@@ -2388,7 +2390,6 @@ JSStructuredCloneReader::readHeader()
                                   "invalid structured clone scope");
         return false;
     }
-    storedScope = JS::StructuredCloneScope(data);
     if (storedScope < allowedScope) {
         JS_ReportErrorNumberASCII(context(), GetErrorMessage, nullptr, JSMSG_SC_BAD_SERIALIZED_DATA,
                                   "incompatible structured clone scope");
