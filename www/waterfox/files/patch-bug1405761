commit 0e2ac46fa12c
Author: Dragana Damjanovic <dd.mozilla@gmail.com>
Date:   Wed Oct 11 03:20:00 2017 -0400

    Bug 1405761 - If the preload pref is disabled rel=preload should be shown as not supported. r=smaug, a=ritu
    
    --HG--
    extra : source : 1f4d35d137631cde34f318fac0c33421d5360dc3
---
 dom/base/test/test_bug1222633.html                    |  4 +++-
 dom/base/test/test_bug1222633_link_update.html        |  4 +++-
 dom/html/HTMLLinkElement.cpp                          | 19 ++++++++++++++++++-
 modules/libpref/init/all.js                           |  2 +-
 .../tools/wptrunner/wptrunner/browsers/firefox.py     |  3 ++-
 5 files changed, 27 insertions(+), 5 deletions(-)

diff --git dom/base/test/test_bug1222633.html dom/base/test/test_bug1222633.html
index 52fecff16e9b..099345dab0b7 100644
--- dom/base/test/test_bug1222633.html
+++ dom/base/test/test_bug1222633.html
@@ -88,8 +88,10 @@ const CROSS_ORIGIN = "http://example.com" + SJS_PATH;
 
 SimpleTest.waitForExplicitFinish();
 
+SpecialPowers.pushPrefEnv({"set": [["network.preload", true]]})
+
 // test same origin
-testPreloadEvent(SAME_ORIGIN + "?statusCode=200&cacheControl=no-cache", false, false)
+.then(() => testPreloadEvent(SAME_ORIGIN + "?statusCode=200&cacheControl=no-cache", false, false))
 .then(() => testPreloadEvent(SAME_ORIGIN + "?statusCode=404&cacheControl=no-cache", false, false))
 .then(() => testPreloadEvent(SAME_ORIGIN + "?statusCode=200&cacheControl=max-age%3D120", false, true))
 .then(() => testPreloadEvent(SAME_ORIGIN + "?statusCode=404&cacheControl=max-age%3D120", false, false))
diff --git dom/base/test/test_bug1222633_link_update.html dom/base/test/test_bug1222633_link_update.html
index 97508d3596cf..1f18284c9470 100644
--- dom/base/test/test_bug1222633_link_update.html
+++ dom/base/test/test_bug1222633_link_update.html
@@ -122,8 +122,10 @@ const CROSS_ORIGIN = "http://example.com" + SJS_PATH;
 
 SimpleTest.waitForExplicitFinish();
 
+SpecialPowers.pushPrefEnv({"set": [["network.preload", true]]})
+
 // Test changing as parameter from a wrong to a correct one.
-testPreloadEventAsAttributeChange(SAME_ORIGIN + "?statusCode=200&cacheControl=max-age%3D120")
+.then(() => testPreloadEventAsAttributeChange(SAME_ORIGIN + "?statusCode=200&cacheControl=max-age%3D120"))
 // Test changing type parameter from a wrong to a correct one for given as parameter.
 .then(() => testPreloadEventAttributeChange(SAME_ORIGIN + "?statusCode=200&cacheControl=max-age%3D120", "type", "text/vtt", "image/png", false, true))
 // Test changing media parameter from a wrong to a correct one.
diff --git dom/html/HTMLLinkElement.cpp dom/html/HTMLLinkElement.cpp
index 810b47aed670..37b45ca03636 100644
--- dom/html/HTMLLinkElement.cpp
+++ dom/html/HTMLLinkElement.cpp
@@ -408,11 +408,28 @@ static const DOMTokenListSupportedToken sSupportedRelValues[] = {
   nullptr
 };
 
+static const DOMTokenListSupportedToken sSupportedRelValuesNoPreload[] = {
+  // Keep this in sync with ToLinkMask in nsStyleLinkElement.cpp.
+  // "import" must come first because it's conditional.
+  "prefetch",
+  "dns-prefetch",
+  "stylesheet",
+  "next",
+  "alternate",
+  "preconnect",
+  "icon",
+  "search",
+  nullptr
+};
 nsDOMTokenList*
 HTMLLinkElement::RelList()
 {
   if (!mRelList) {
-    mRelList = new nsDOMTokenList(this, nsGkAtoms::rel, sSupportedRelValues);
+    if (Preferences::GetBool("network.preload")) {
+      mRelList = new nsDOMTokenList(this, nsGkAtoms::rel, sSupportedRelValues);
+    } else {
+      mRelList = new nsDOMTokenList(this, nsGkAtoms::rel, sSupportedRelValuesNoPreload);
+    }
   }
   return mRelList;
 }
diff --git modules/libpref/init/all.js modules/libpref/init/all.js
index e83781623803..79a0ea89d6de 100644
--- modules/libpref/init/all.js
+++ modules/libpref/init/all.js
@@ -2105,7 +2105,7 @@ pref("network.dir.format", 2);
 // <link rel="prefetch"> URLs).
 pref("network.prefetch-next", true);
 // enables the preloading (i.e., preloading of <link rel="preload"> URLs).
-pref("network.preload", true);
+pref("network.preload", false);
 
 // enables the predictive service
 pref("network.predictor.enabled", true);
diff --git testing/web-platform/tests/tools/wptrunner/wptrunner/browsers/firefox.py testing/web-platform/tests/tools/wptrunner/wptrunner/browsers/firefox.py
index f869c82a8ed0..43da63c7ca4e 100644
--- testing/web-platform/tests/tools/wptrunner/wptrunner/browsers/firefox.py
+++ testing/web-platform/tests/tools/wptrunner/wptrunner/browsers/firefox.py
@@ -190,7 +190,8 @@ class FirefoxBrowser(Browser):
                                       "network.dns.localDomains": ",".join(hostnames),
                                       "network.proxy.type": 0,
                                       "places.history.enabled": False,
-                                      "dom.send_after_paint_to_content": True})
+                                      "dom.send_after_paint_to_content": True,
+                                      "network.preload": True})
         if self.e10s:
             self.profile.set_preferences({"browser.tabs.remote.autostart": True})
 
