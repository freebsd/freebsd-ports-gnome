commit bcef6c71b916
Author: Gijs Kruitbosch <gijskruitbosch@gmail.com>
Date:   Wed Sep 27 22:37:19 2017 +0100

    Bug 1402981 - Add light and dark themes to the list of themes in customize mode by default. r=jaws, a=sledru
    
    MozReview-Commit-ID: 4GxPEm119Yc
    
    --HG--
    extra : source : ed2a1dff7a2e544a76de0eb65139f0febd0211e4
---
 .../components/customizableui/CustomizeMode.jsm    | 45 +++++++++++++++-------
 .../browser_1007336_lwthemes_in_customize_mode.js  | 44 +++++++++++++++------
 2 files changed, 64 insertions(+), 25 deletions(-)

diff --git browser/components/customizableui/CustomizeMode.jsm browser/components/customizableui/CustomizeMode.jsm
index fbc8ff27093c..aa80840a3c42 100644
--- browser/components/customizableui/CustomizeMode.jsm
+++ browser/components/customizableui/CustomizeMode.jsm
@@ -1311,7 +1311,9 @@ CustomizeMode.prototype = {
 
   onLWThemesMenuShowing(aEvent) {
     const DEFAULT_THEME_ID = "{972ce4c6-7e08-4474-a285-3208198ce6fd}";
-    const RECENT_LWT_COUNT = 5;
+    const LIGHT_THEME_ID = "firefox-compact-light@mozilla.org";
+    const DARK_THEME_ID = "firefox-compact-dark@mozilla.org";
+    const MAX_THEME_COUNT = 6;
 
     this._clearLWThemesMenu(aEvent.target);
 
@@ -1366,19 +1368,27 @@ CustomizeMode.prototype = {
       let themes = [aDefaultTheme];
       let lwts = LightweightThemeManager.usedThemes;
       let currentLwt = LightweightThemeManager.currentTheme;
-      let currentLwtIndex = lwts.indexOf(currentLwt);
-      if (currentLwtIndex > -1) {
-        // Make sure that the current lightweight theme
-        // is at the beginning of the array to avoid truncation
-        // in the next step.
-        lwts = lwts.splice(currentLwtIndex, 1).concat(lwts);
-      }
-      if (lwts.length > RECENT_LWT_COUNT)
-        lwts.length = RECENT_LWT_COUNT;
+      // The lwts besides the builtin themes don't have an isActive property:
       for (let lwt of lwts) {
-        lwt.isActive = !!currentLwt && (lwt.id == currentLwt.id);
-        themes.push(lwt);
+        if (!lwt.hasOwnProperty("isActive")) {
+          lwt.isActive = !!currentLwt && (lwt.id == currentLwt.id);
+        }
+      }
+
+      // Move the current theme (if any) and the light/dark themes to the start:
+      let importantThemes = [LIGHT_THEME_ID, DARK_THEME_ID];
+      if (currentLwt && !importantThemes.includes(currentLwt.id)) {
+        importantThemes.push(currentLwt.id);
+      }
+      for (let importantTheme of importantThemes) {
+        let themeIndex = lwts.findIndex(theme => theme.id == importantTheme);
+        if (themeIndex > -1) {
+          themes.push(...lwts.splice(themeIndex, 1));
+        }
       }
+      themes = themes.concat(lwts);
+      if (themes.length > MAX_THEME_COUNT)
+        themes.length = MAX_THEME_COUNT;
 
       let footer = doc.getElementById("customization-lwtheme-menu-footer");
       let panel = footer.parentNode;
@@ -1400,8 +1410,15 @@ CustomizeMode.prototype = {
       recommendedThemes = JSON.parse(recommendedThemes);
       let sb = Services.strings.createBundle("chrome://browser/locale/lightweightThemes.properties");
       for (let theme of recommendedThemes) {
-        theme.name = sb.GetStringFromName("lightweightThemes." + theme.id + ".name");
-        theme.description = sb.GetStringFromName("lightweightThemes." + theme.id + ".description");
+        try {
+          theme.name = sb.GetStringFromName("lightweightThemes." + theme.id + ".name");
+          theme.description = sb.GetStringFromName("lightweightThemes." + theme.id + ".description");
+        } catch (ex) {
+          // If finding strings for this failed, just don't build it. This can
+          // happen for users with 'older' recommended themes lists, some of which
+          // have since been removed from Firefox.
+          continue;
+        }
         let button = buildToolbarButton(theme);
         button.addEventListener("command", () => {
           LightweightThemeManager.setLocalTheme(button.theme);
diff --git browser/components/customizableui/test/browser_1007336_lwthemes_in_customize_mode.js browser/components/customizableui/test/browser_1007336_lwthemes_in_customize_mode.js
index 3cb3ee34c7cf..3ee8f9b8f697 100644
--- browser/components/customizableui/test/browser_1007336_lwthemes_in_customize_mode.js
+++ browser/components/customizableui/test/browser_1007336_lwthemes_in_customize_mode.js
@@ -5,12 +5,13 @@
 "use strict";
 
 const DEFAULT_THEME_ID = "{972ce4c6-7e08-4474-a285-3208198ce6fd}";
+const LIGHT_THEME_ID = "firefox-compact-light@mozilla.org";
+const DARK_THEME_ID = "firefox-compact-dark@mozilla.org";
 const {LightweightThemeManager} = Components.utils.import("resource://gre/modules/LightweightThemeManager.jsm", {});
 
 add_task(async function() {
   Services.prefs.clearUserPref("lightweightThemes.usedThemes");
   Services.prefs.clearUserPref("lightweightThemes.recommendedThemes");
-  LightweightThemeManager.clearBuiltInThemes();
 
   await startCustomizing();
 
@@ -35,9 +36,14 @@ add_task(async function() {
   let header = document.getElementById("customization-lwtheme-menu-header");
   let recommendedHeader = document.getElementById("customization-lwtheme-menu-recommended");
 
-  is(header.nextSibling.nextSibling, recommendedHeader,
-     "There should only be one theme (default) in the 'My Themes' section by default");
-  is(header.nextSibling.theme.id, DEFAULT_THEME_ID, "That theme should be the default theme");
+  is(header.nextSibling.nextSibling.nextSibling.nextSibling, recommendedHeader,
+     "There should only be three themes (default, light, dark) in the 'My Themes' section by default");
+  is(header.nextSibling.theme.id, DEFAULT_THEME_ID,
+     "The first theme should be the default theme");
+  is(header.nextSibling.nextSibling.theme.id, LIGHT_THEME_ID,
+     "The second theme should be the light theme");
+  is(header.nextSibling.nextSibling.nextSibling.theme.id, DARK_THEME_ID,
+     "The third theme should be the dark theme");
 
   let firstLWTheme = recommendedHeader.nextSibling;
   let firstLWThemeId = firstLWTheme.theme.id;
@@ -52,12 +58,18 @@ add_task(async function() {
   await popupShownPromise;
 
   is(header.nextSibling.theme.id, DEFAULT_THEME_ID, "The first theme should be the Default theme");
-  let installedThemeId = header.nextSibling.nextSibling.theme.id;
+  let installedThemeId = header.nextSibling.nextSibling.nextSibling.nextSibling.theme.id;
   ok(installedThemeId.startsWith(firstLWThemeId),
      "The second theme in the 'My Themes' section should be the newly installed theme: " +
      "Installed theme id: " + installedThemeId + "; First theme ID: " + firstLWThemeId);
-  is(header.nextSibling.nextSibling.nextSibling, recommendedHeader,
-     "There should be two themes in the 'My Themes' section");
+  let themeCount = 0;
+  let iterNode = header;
+  while (iterNode.nextSibling && iterNode.nextSibling.theme) {
+    themeCount++;
+    iterNode = iterNode.nextSibling;
+  }
+  is(themeCount, 4,
+     "There should be four themes in the 'My Themes' section");
 
   let defaultTheme = header.nextSibling;
   defaultTheme.doCommand();
@@ -90,11 +102,21 @@ add_task(async function() {
   await popupShownPromise;
   header = document.getElementById("customization-lwtheme-menu-header");
   is(header.hidden, false, "Header should never be hidden");
-  is(header.nextSibling.theme.id, DEFAULT_THEME_ID, "The first theme should be the Default theme");
-  is(header.nextSibling.hidden, false, "The default theme should never be hidden");
+  let themeNode = header.nextSibling;
+  is(themeNode.theme.id, DEFAULT_THEME_ID, "The first theme should be the Default theme");
+  is(themeNode.hidden, false, "The default theme should never be hidden");
+
+  themeNode = themeNode.nextSibling;
+  is(themeNode.theme.id, LIGHT_THEME_ID, "The second theme should be the Light theme");
+  is(themeNode.hidden, false, "The light theme should never be hidden");
+
+  themeNode = themeNode.nextSibling;
+  is(themeNode.theme.id, DARK_THEME_ID, "The third theme should be the Dark theme");
+  is(themeNode.hidden, false, "The dark theme should never be hidden");
+
   recommendedHeader = document.getElementById("customization-lwtheme-menu-recommended");
-  is(header.nextSibling.nextSibling, recommendedHeader,
-     "There should only be one theme (default) in the 'My Themes' section by default");
+  is(themeNode.nextSibling, recommendedHeader,
+     "There should only be three themes (default, light, dark) in the 'My Themes' section now");
   let footer = document.getElementById("customization-lwtheme-menu-footer");
   is(recommendedHeader.nextSibling.id, footer.id, "There should be no recommended themes in the menu");
   is(recommendedHeader.hidden, true, "The recommendedHeader should be hidden since there are no recommended themes");
