commit b5254d352036
Author: Honza Bambas <honzab.moz@firemni.cz>
Date:   Mon Oct 2 10:12:00 2017 -0400

    Bug 1403998 - Make view-source channels return correct resultPrincipalURI via LoadInfo after redirect. r=bz, a=ritu
    
    --HG--
    extra : source : f693bf1345f941592b1ce19514a2bbf00e6ef06a
---
 .../protocol/viewsource/nsViewSourceChannel.cpp    | 95 ++++++++++++++++++----
 netwerk/protocol/viewsource/nsViewSourceChannel.h  | 10 +++
 2 files changed, 91 insertions(+), 14 deletions(-)

diff --git netwerk/protocol/viewsource/nsViewSourceChannel.cpp netwerk/protocol/viewsource/nsViewSourceChannel.cpp
index 4c7f335352d3..1f1ee01818fb 100644
--- netwerk/protocol/viewsource/nsViewSourceChannel.cpp
+++ netwerk/protocol/viewsource/nsViewSourceChannel.cpp
@@ -129,12 +129,87 @@ nsViewSourceChannel::InitSrcdoc(nsIURI* aURI,
     mApplicationCacheChannel = do_QueryInterface(mChannel);
     mUploadChannel = do_QueryInterface(mChannel);
 
+    rv = UpdateLoadInfoResultPrincipalURI();
+    NS_ENSURE_SUCCESS(rv, rv);
+
     nsCOMPtr<nsIInputStreamChannel> isc = do_QueryInterface(mChannel);
     MOZ_ASSERT(isc);
     isc->SetBaseURI(aBaseURI);
     return NS_OK;
 }
 
+nsresult
+nsViewSourceChannel::UpdateLoadInfoResultPrincipalURI()
+{
+    nsresult rv;
+
+    MOZ_ASSERT(mChannel);
+
+    nsCOMPtr<nsILoadInfo> channelLoadInfo = mChannel->GetLoadInfo();
+    if (!channelLoadInfo) {
+        return NS_OK;
+    }
+
+    nsCOMPtr<nsIURI> channelResultPrincipalURI;
+    rv = channelLoadInfo->GetResultPrincipalURI(getter_AddRefs(channelResultPrincipalURI));
+    if (NS_FAILED(rv)) {
+        return rv;
+    }
+
+    if (!channelResultPrincipalURI) {
+        mChannel->GetOriginalURI(getter_AddRefs(channelResultPrincipalURI));
+        return NS_OK;
+    }
+
+    if (!channelResultPrincipalURI) {
+        return NS_ERROR_UNEXPECTED;
+    }
+
+    bool alreadyViewSource;
+    if (NS_SUCCEEDED(channelResultPrincipalURI->SchemeIs("view-source", &alreadyViewSource)) &&
+        alreadyViewSource) {
+        return NS_OK;
+    }
+
+    nsCOMPtr<nsIURI> updatedResultPrincipalURI;
+    rv = BuildViewSourceURI(channelResultPrincipalURI,
+                            getter_AddRefs(updatedResultPrincipalURI));
+    if (NS_FAILED(rv)) {
+        return rv;
+    }
+
+    rv = channelLoadInfo->SetResultPrincipalURI(updatedResultPrincipalURI);
+    if (NS_FAILED(rv)) {
+        return rv;
+    }
+
+    return NS_OK;
+}
+
+nsresult
+nsViewSourceChannel::BuildViewSourceURI(nsIURI * aURI, nsIURI ** aResult)
+{
+    nsresult rv;
+
+    // protect ourselves against broken channel implementations
+    if (!aURI) {
+        NS_ERROR("no URI to build view-source uri!");
+        return NS_ERROR_UNEXPECTED;
+    }
+
+    nsAutoCString spec;
+    rv = aURI->GetSpec(spec);
+    if (NS_FAILED(rv)) {
+        return rv;
+    }
+
+    return NS_NewURI(aResult,
+                     /* XXX Gross hack -- NS_NewURI goes into an infinite loop on
+                     non-flat specs.  See bug 136980 */
+                     nsAutoCString(NS_LITERAL_CSTRING("view-source:") + spec),
+                     nullptr);
+}
+
 ////////////////////////////////////////////////////////////////////////////////
 // nsIRequest methods:
 
@@ -229,24 +304,11 @@ nsViewSourceChannel::GetURI(nsIURI* *aURI)
 
     nsCOMPtr<nsIURI> uri;
     nsresult rv = mChannel->GetURI(getter_AddRefs(uri));
-    if (NS_FAILED(rv))
-      return rv;
-
-    // protect ourselves against broken channel implementations
-    if (!uri) {
-      NS_ERROR("inner channel returned NS_OK and a null URI");
-      return NS_ERROR_UNEXPECTED;
-    }
-
-    nsAutoCString spec;
-    rv = uri->GetSpec(spec);
     if (NS_FAILED(rv)) {
       return rv;
     }
 
-    /* XXX Gross hack -- NS_NewURI goes into an infinite loop on
-       non-flat specs.  See bug 136980 */
-    return NS_NewURI(aURI, nsAutoCString(NS_LITERAL_CSTRING("view-source:")+spec), nullptr);
+    return BuildViewSourceURI(uri, aURI);
 }
 
 NS_IMETHODIMP
@@ -671,6 +733,11 @@ nsViewSourceChannel::OnStartRequest(nsIRequest *aRequest, nsISupports *aContext)
     mCacheInfoChannel = do_QueryInterface(mChannel);
     mUploadChannel = do_QueryInterface(aRequest);
 
+    nsresult rv = UpdateLoadInfoResultPrincipalURI();
+    if (NS_FAILED(rv)) {
+        Cancel(rv);
+    }
+
     return mListener->OnStartRequest(static_cast<nsIViewSourceChannel*>
                                                 (this),
                                      aContext);
diff --git netwerk/protocol/viewsource/nsViewSourceChannel.h netwerk/protocol/viewsource/nsViewSourceChannel.h
index 002739b361f7..1970c01588e3 100644
--- netwerk/protocol/viewsource/nsViewSourceChannel.h
+++ netwerk/protocol/viewsource/nsViewSourceChannel.h
@@ -55,9 +55,19 @@ public:
                                      const nsAString &aSrcdoc,
                                      nsILoadInfo* aLoadInfo);
 
+    // Updates or sets the result principal URI of the underlying channel's
+    // loadinfo to be prefixed with the "view-source:" schema as:
+    //
+    // mChannel.loadInfo.resultPrincipalURI = "view-source:" +
+    //    (mChannel.loadInfo.resultPrincipalURI | mChannel.orignalURI);
+    nsresult UpdateLoadInfoResultPrincipalURI();
+
 protected:
     ~nsViewSourceChannel() {}
 
+    // Clones aURI and prefixes it with "view-source:" schema,
+    nsresult BuildViewSourceURI(nsIURI* aURI, nsIURI** aResult);
+
     nsCOMPtr<nsIChannel>        mChannel;
     nsCOMPtr<nsIHttpChannel>    mHttpChannel;
     nsCOMPtr<nsIHttpChannelInternal>    mHttpChannelInternal;
