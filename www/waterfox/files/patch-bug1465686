commit e963f75ef278
Author: Lee Salzman <lsalzman@mozilla.com>
Date:   Fri Jun 1 15:52:26 2018 -0400

    Bug 1465686 - Validate SkArenaAlloc sizes. r=rhunt, a=RyanVM
    
    MozReview-Commit-ID: Cc4cxKeF4xn
    
    --HG--
    extra : source : 9019db1eaddb79dbfd1d4c357765599499eb02b4
---
 gfx/skia/skia/src/core/SkArenaAlloc.h | 11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

diff --git gfx/skia/skia/src/core/SkArenaAlloc.h gfx/skia/skia/src/core/SkArenaAlloc.h
index c9e7274e63ded..b93054cff0177 100644
--- gfx/skia/skia/src/core/SkArenaAlloc.h
+++ gfx/skia/skia/src/core/SkArenaAlloc.h
@@ -112,9 +112,14 @@ public:
         return sk_sp<T>(SkRef(this->make<T>(std::forward<Args>(args)...)));
     }
 
+    uint32_t safeU32(size_t n) {
+        SkASSERT_RELEASE(SkTFitsIn<uint32_t>(n));
+        return uint32_t(n);
+    }
+
     template <typename T>
     T* makeArrayDefault(size_t count) {
-        uint32_t safeCount = SkTo<uint32_t>(count);
+        uint32_t safeCount = safeU32(count);
         T* array = (T*)this->commonArrayAlloc<T>(safeCount);
 
         // If T is primitive then no initialization takes place.
@@ -126,7 +131,7 @@ public:
 
     template <typename T>
     T* makeArray(size_t count) {
-        uint32_t safeCount = SkTo<uint32_t>(count);
+        uint32_t safeCount = safeU32(count);
         T* array = (T*)this->commonArrayAlloc<T>(safeCount);
 
         // If T is primitive then the memory is initialized. For example, an array of chars will
@@ -139,7 +144,7 @@ public:
 
     // Only use makeBytesAlignedTo if none of the typed variants are impractical to use.
     void* makeBytesAlignedTo(size_t size, size_t align) {
-        auto objStart = this->allocObject(SkTo<uint32_t>(size), SkTo<uint32_t>(align));
+        auto objStart = this->allocObject(safeU32(size), safeU32(align));
         fCursor = objStart + size;
         return objStart;
     }
