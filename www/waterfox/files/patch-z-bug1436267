commit fde373d05f1a
Author: Karl Tomlinson <karlt+@karlt.net>
Date:   Wed Feb 7 20:16:01 2018 +1300

    bug 1436267 fallback from audio callback to system clock driver on error only once r=padenot a=ritu
    
    Usually, mShouldFallbackIfError has been reset to false in DataCallback()
    before Stop() is called.  However, if fallback to a system clock driver due to
    cubeb error had already occurred, then mShouldFallbackIfError would not have
    been reset, and Stop() is still called.  With mShouldFallbackIfError still
    true, a cubeb error in stop would have created another fallback thread.
    
    I expect that resetting mShouldFallbackIfError in Stop() would also be an
    effective alternative solution, but resetting on StateCallback() happens
    earlier, which would be an advantage if any additional errors could possibly
    be reported to StateCallback().
    
    MozReview-Commit-ID: E9j7PQmS3O4
    
    --HG--
    extra : source : c96fdc3e0d635b2036996f30ecf5d667d1d62027
---
 dom/media/GraphDriver.cpp | 1 +
 1 file changed, 1 insertion(+)

diff --git dom/media/GraphDriver.cpp dom/media/GraphDriver.cpp
index f37568e21816..54e46fa81e69 100644
--- dom/media/GraphDriver.cpp
+++ dom/media/GraphDriver.cpp
@@ -1039,6 +1039,7 @@ AudioCallbackDriver::StateCallback(cubeb_state aState)
   LOG(LogLevel::Debug, ("AudioCallbackDriver State: %d", aState));
 
   if (aState == CUBEB_STATE_ERROR && mShouldFallbackIfError) {
+    mShouldFallbackIfError = false;
     MonitorAutoLock lock(GraphImpl()->GetMonitor());
     RemoveCallback();
     FallbackToSystemClockDriver();
