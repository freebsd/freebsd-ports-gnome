commit 8721b8f42bc0
Author: Alexander Surkov <surkov.alexander@gmail.com>
Date:   Tue Sep 26 16:25:12 2017 -0400

    Bug 1321960 - Rename nsIPresShell::mSuppressInterruptibleReflows to mWasLastReflowInterrupted to reflect better its purpose. r=dholbert, a=sledru
    
    --HG--
    extra : source : c65fce03b9e0a1a7591668f727b846675cffa44a
---
 layout/base/PresShell.cpp       |  8 ++++----
 layout/base/nsIPresShell.h      | 18 +++++++++++++++++-
 layout/base/nsRefreshDriver.cpp |  2 +-
 3 files changed, 22 insertions(+), 6 deletions(-)

diff --git layout/base/PresShell.cpp layout/base/PresShell.cpp
index 4ca35ffe1466..a1660ac30de7 100644
--- layout/base/PresShell.cpp
+++ layout/base/PresShell.cpp
@@ -762,7 +762,7 @@ nsIPresShell::nsIPresShell()
     , mFrozen(false)
     , mIsFirstPaint(false)
     , mObservesMutationsForPrint(false)
-    , mSuppressInterruptibleReflows(false)
+    , mWasLastReflowInterrupted(false)
     , mScrollPositionClampingScrollPortSizeSet(false)
     , mNeedLayoutFlush(true)
     , mNeedStyleFlush(true)
@@ -4197,7 +4197,7 @@ PresShell::DoFlushPendingNotifications(mozilla::ChangesToFlush aFlush)
     // worry about them.  They can't be triggered during reflow, so we should
     // be good.
 
-    if (flushType >= (mSuppressInterruptibleReflows
+    if (flushType >= (SuppressInterruptibleReflows()
                         ? FlushType::Layout
                         : FlushType::InterruptibleLayout) &&
         !mIsDestroying) {
@@ -4232,7 +4232,7 @@ PresShell::DoFlushPendingNotifications(mozilla::ChangesToFlush aFlush)
   if (!didLayoutFlush && flushType >= FlushType::InterruptibleLayout &&
       !mIsDestroying) {
     // We suppressed this flush either due to it not being safe to flush,
-    // or due to mSuppressInterruptibleReflows.  Either way, the
+    // or due to SuppressInterruptibleReflows().  Either way, the
     // mNeedLayoutFlush flag needs to be re-set.
     SetNeedLayoutFlush();
   }
@@ -9484,7 +9484,7 @@ PresShell::DoReflow(nsIFrame* target, bool aInterruptible)
     // Any FlushPendingNotifications with interruptible reflows
     // should be suppressed now. We don't want to do extra reflow work
     // before our reflow event happens.
-    mSuppressInterruptibleReflows = true;
+    mWasLastReflowInterrupted = true;
     MaybeScheduleReflow();
   }
 
diff --git layout/base/nsIPresShell.h layout/base/nsIPresShell.h
index 9f65bad1b4d7..885bc0bc699a 100644
--- layout/base/nsIPresShell.h
+++ layout/base/nsIPresShell.h
@@ -1581,6 +1581,21 @@ public:
     mFontSizeInflationEnabledIsDirty = true;
   }
 
+  /**
+   * Return true if the most recent interruptible reflow was interrupted.
+   */
+  bool IsReflowInterrupted() const {
+    return mWasLastReflowInterrupted;
+  }
+
+  /**
+   * Return true if the the interruptible reflows have to be suppressed.
+   * This may happen only if if the most recent reflow was interrupted.
+   */
+  bool SuppressInterruptibleReflows() const {
+    return mWasLastReflowInterrupted;
+  }
+
   //////////////////////////////////////////////////////////////////////////////
   // Approximate frame visibility tracking public API.
   //////////////////////////////////////////////////////////////////////////////
@@ -1794,7 +1809,8 @@ protected:
   bool                      mIsFirstPaint : 1;
   bool                      mObservesMutationsForPrint : 1;
 
-  bool                      mSuppressInterruptibleReflows : 1;
+  // Whether the most recent interruptible reflow was actually interrupted:
+  bool                      mWasLastReflowInterrupted : 1;
   bool                      mScrollPositionClampingScrollPortSizeSet : 1;
 
   // True if a layout flush might not be a no-op
diff --git layout/base/nsRefreshDriver.cpp layout/base/nsRefreshDriver.cpp
index 4dbe56952ccf..4ca4783561c6 100644
--- layout/base/nsRefreshDriver.cpp
+++ layout/base/nsRefreshDriver.cpp
@@ -1949,7 +1949,7 @@ nsRefreshDriver::Tick(int64_t aNowEpoch, TimeStamp aNowTime)
 
         nsCOMPtr<nsIPresShell> shellKungFuDeathGrip(shell);
         shell->mObservingLayoutFlushes = false;
-        shell->mSuppressInterruptibleReflows = false;
+        shell->mWasLastReflowInterrupted = false;
         FlushType flushType = HasPendingAnimations(shell)
                                ? FlushType::Layout
                                : FlushType::InterruptibleLayout;
commit 5ee10fd6f2e4
Author: Alexander Surkov <surkov.alexander@gmail.com>
Date:   Tue Sep 26 16:27:02 2017 -0400

    Bug 1321960 - Let an interrupted reflow finish before processing a11y. r=eeejay, f=dholbert, a=sledru
    
    --HG--
    extra : source : c845865489652eadaa3f9a12736c1db56c0e6f12
---
 accessible/base/NotificationController.cpp | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git accessible/base/NotificationController.cpp accessible/base/NotificationController.cpp
index d08500458221..8263c7b54d83 100644
--- accessible/base/NotificationController.cpp
+++ accessible/base/NotificationController.cpp
@@ -601,9 +601,13 @@ NotificationController::WillRefresh(mozilla::TimeStamp aTime)
   if (!mDocument)
     return;
 
+  // Wait until an update, we have started, or an interruptible reflow is
+  // finished.
   if (mObservingState == eRefreshProcessing ||
-      mObservingState == eRefreshProcessingForUpdate)
+      mObservingState == eRefreshProcessingForUpdate ||
+      mPresShell->IsReflowInterrupted()) {
     return;
+  }
 
   // Any generic notifications should be queued if we're processing content
   // insertions or generic notifications.
