Always build libyuv x86 optimizations with Clang.

diff --git media/libyuv/include/libyuv/compare_row.h media/libyuv/include/libyuv/compare_row.h
index 38a957b2ce33..59ec4b30c238 100644
--- mozilla/media/libyuv/include/libyuv/compare_row.h
+++ mozilla/media/libyuv/include/libyuv/compare_row.h
@@ -19,7 +19,7 @@ extern "C" {
 #endif
 
 #if defined(__pnacl__) || defined(__CLR_VER) || \
-    (defined(__i386__) && !defined(__SSE2__))
+    (defined(__i386__) && !defined(__SSE__) && !defined(__clang__))
 #define LIBYUV_DISABLE_X86
 #endif
 // MemorySanitizer does not support assembly code yet. http://crbug.com/344505
diff --git media/libyuv/include/libyuv/planar_functions.h media/libyuv/include/libyuv/planar_functions.h
index 881b0c5c6473..491c022bfe8f 100644
--- mozilla/media/libyuv/include/libyuv/planar_functions.h
+++ mozilla/media/libyuv/include/libyuv/planar_functions.h
@@ -450,7 +450,7 @@ int I420Interpolate(const uint8* src0_y, int src0_stride_y,
                     int width, int height, int interpolation);
 
 #if defined(__pnacl__) || defined(__CLR_VER) || \
-    (defined(__i386__) && !defined(__SSE2__))
+    (defined(__i386__) && !defined(__SSE__) && !defined(__clang__))
 #define LIBYUV_DISABLE_X86
 #endif
 // MemorySanitizer does not support assembly code yet. http://crbug.com/344505
diff --git media/libyuv/include/libyuv/rotate_row.h media/libyuv/include/libyuv/rotate_row.h
index ebc487f9abf4..59fbd10b573c 100644
--- mozilla/media/libyuv/include/libyuv/rotate_row.h
+++ mozilla/media/libyuv/include/libyuv/rotate_row.h
@@ -19,7 +19,7 @@ extern "C" {
 #endif
 
 #if defined(__pnacl__) || defined(__CLR_VER) || \
-    (defined(__i386__) && !defined(__SSE2__))
+    (defined(__i386__) && !defined(__SSE__) && !defined(__clang__))
 #define LIBYUV_DISABLE_X86
 #endif
 // MemorySanitizer does not support assembly code yet. http://crbug.com/344505
diff --git media/libyuv/include/libyuv/row.h media/libyuv/include/libyuv/row.h
index 069d73bd3f2e..3616ecd81c3d 100644
--- mozilla/media/libyuv/include/libyuv/row.h
+++ mozilla/media/libyuv/include/libyuv/row.h
@@ -38,7 +38,7 @@ extern "C" {
   var = 0
 
 #if defined(__pnacl__) || defined(__CLR_VER) || \
-    (defined(__i386__) && !defined(__SSE2__))
+    (defined(__i386__) && !defined(__SSE__) && !defined(__clang__))
 #define LIBYUV_DISABLE_X86
 #endif
 // MemorySanitizer does not support assembly code yet. http://crbug.com/344505
diff --git media/libyuv/include/libyuv/scale_row.h media/libyuv/include/libyuv/scale_row.h
index df699e6c2282..242f025b1e6e 100644
--- mozilla/media/libyuv/include/libyuv/scale_row.h
+++ mozilla/media/libyuv/include/libyuv/scale_row.h
@@ -20,7 +20,7 @@ extern "C" {
 #endif
 
 #if defined(__pnacl__) || defined(__CLR_VER) || \
-    (defined(__i386__) && !defined(__SSE2__))
+    (defined(__i386__) && !defined(__SSE__) && !defined(__clang__))
 #define LIBYUV_DISABLE_X86
 #endif
 // MemorySanitizer does not support assembly code yet. http://crbug.com/344505
diff --git media/libyuv/linux.mk media/libyuv/linux.mk
index ee5a3a70705a..c1a45173c9ab 100644
--- mozilla/media/libyuv/linux.mk
+++ mozilla/media/libyuv/linux.mk
@@ -78,4 +78,4 @@ cpuid: util/cpuid.c libyuv.a
 	$(CC) $(CFLAGS) -o $@ util/cpuid.c libyuv.a
 
 clean:
-	/bin/rm -f source/*.o *.ii *.s libyuv.a convert cpuid psnr
+	/bin/rm -f source/*.o *.ii *.s libyuv.a yuvconvert cpuid psnr
