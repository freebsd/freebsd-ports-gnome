diff --git js/src/wasm/WasmSignalHandlers.cpp js/src/wasm/WasmSignalHandlers.cpp
index fc49f361d82a..636537f84786 100644
--- mozilla-release/js/src/wasm/WasmSignalHandlers.cpp
+++ mozilla-release/js/src/wasm/WasmSignalHandlers.cpp
@@ -102,6 +102,11 @@ using mozilla::DebugOnly;
 #define EPC_sig(p) ((p)->sc_pc)
 #define RFP_sig(p) ((p)->sc_regs[30])
 #endif
+#if defined(__ppc64__) || defined(__PPC64__) || defined(__ppc64le__) || \
+    defined(__PPC64LE__)
+#define R01_sig(p) ((p)->sc_frame.fixreg[1])
+#define R32_sig(p) ((p)->sc_frame.srr0)
+#endif
 #elif defined(__linux__) || defined(__sun)
 #if defined(__linux__)
 #define EIP_sig(p) ((p)->uc_mcontext.gregs[REG_EIP])
@@ -169,6 +174,11 @@ using mozilla::DebugOnly;
 #define EPC_sig(p) ((p)->uc_mcontext.__gregs[_REG_EPC])
 #define RFP_sig(p) ((p)->uc_mcontext.__gregs[_REG_S8])
 #endif
+#if defined(__ppc64__) || defined(__PPC64__) || defined(__ppc64le__) || \
+    defined(__PPC64LE__)
+#define R01_sig(p) ((p)->uc_mcontext.__gregs[_REG_R1])
+#define R32_sig(p) ((p)->uc_mcontext.__gregs[_REG_PC])
+#endif
 #elif defined(__DragonFly__) || defined(__FreeBSD__) || \
     defined(__FreeBSD_kernel__)
 #define EIP_sig(p) ((p)->uc_mcontext.mc_eip)
@@ -197,6 +207,11 @@ using mozilla::DebugOnly;
 #if defined(__FreeBSD__) && defined(__mips__)
 #define EPC_sig(p) ((p)->uc_mcontext.mc_pc)
 #define RFP_sig(p) ((p)->uc_mcontext.mc_regs[30])
+#endif
+#if defined(__FreeBSD__) && (defined(__ppc64__) || defined(__PPC64__) || \
+                             defined(__ppc64le__) || defined(__PPC64LE__))
+#define R01_sig(p) ((p)->uc_mcontext.mc_gpr[1])
+#define R32_sig(p) ((p)->uc_mcontext.mc_srr0)
 #endif
 #elif defined(XP_DARWIN)
 #define EIP_sig(p) ((p)->thread.uts.ts32.__eip)
