--- .env.production.sample.orig	2018-01-06 19:32:29 UTC
+++ .env.production.sample
@@ -1,19 +1,33 @@
+# The following entries can be set in /etc/rc.conf.  The entries in /etc/rc.conf will take priority over values set here.
+#
+# mastodon_db_name=mastodon_production
+# mastodon_db_host=localhost
+# mastodon_db_user=mastodon
+# mastodon_db_port=5432
+#
+# mastodon_local_domain=mastodon.example.com
+# mastodon_smtp_from_address=mastodon@example.com
+#
+# mastodon_redis_host=localhost
+# mastodon_redis_port=6379
+#
+
 # Service dependencies
 # You may set REDIS_URL instead for more advanced options
 # You may also set REDIS_NAMESPACE to share Redis between multiple Mastodon servers
-REDIS_HOST=redis
-REDIS_PORT=6379
+# REDIS_HOST=localhost
+# REDIS_PORT=6379
 # You may set DATABASE_URL instead for more advanced options
-DB_HOST=db
-DB_USER=postgres
-DB_NAME=postgres
-DB_PASS=
-DB_PORT=5432
+# DB_HOST=localhost
+# DB_USER=mastodon
+# DB_NAME=mastodon_production
+# DB_PASS=
+# DB_PORT=5432
 
 # Federation
 # Note: Changing LOCAL_DOMAIN at a later time will cause unwanted side effects, including breaking all existing federation.
 # LOCAL_DOMAIN should *NOT* contain the protocol part of the domain e.g https://example.com.
-LOCAL_DOMAIN=example.com 
+LOCAL_DOMAIN=mastodon.example.com
 
 # Changing LOCAL_HTTPS in production is no longer supported. (Mastodon will always serve https:// links)
 
@@ -27,8 +41,7 @@ LOCAL_DOMAIN=example.com 
 # be added. Comma separated values
 # ALTERNATE_DOMAINS=example1.com,example2.com
 
-# Application secrets
-# Generate each with the `RAILS_ENV=production bundle exec rake secret` task (`docker-compose run --rm web rake secret` if you use docker compose)
+# Application secrets; Generate each with the `RAILS_ENV=production rake secret`
 PAPERCLIP_SECRET=
 SECRET_KEY_BASE=
 OTP_SECRET=
@@ -38,7 +51,7 @@ OTP_SECRET=
 # You should only generate this once per instance. If you later decide to change it, all push subscription will
 # be invalidated, requiring the users to access the website again to resubscribe.
 #
-# Generate with `RAILS_ENV=production bundle exec rake mastodon:webpush:generate_vapid_key` task (`docker-compose run --rm web rake mastodon:webpush:generate_vapid_key` if you use docker compose)
+# Generate with `RAILS_ENV=production rake mastodon:webpush:generate_vapid_key`
 #
 # For more information visit https://rossta.net/blog/using-the-web-push-api-with-vapid.html
 VAPID_PRIVATE_KEY=
@@ -60,18 +73,18 @@ VAPID_PUBLIC_KEY=
 # If you want to use an SMTP server without authentication (e.g local Postfix relay)
 # then set SMTP_AUTH_METHOD and SMTP_OPENSSL_VERIFY_MODE to 'none' and 
 # *comment* SMTP_LOGIN and SMTP_PASSWORD (leaving them blank is not enough).
-SMTP_SERVER=smtp.mailgun.org
-SMTP_PORT=587
-SMTP_LOGIN=
-SMTP_PASSWORD=
-SMTP_FROM_ADDRESS=notifications@example.com
-#SMTP_DOMAIN= # defaults to LOCAL_DOMAIN
-#SMTP_DELIVERY_METHOD=smtp # delivery method can also be sendmail
-#SMTP_AUTH_METHOD=plain
-#SMTP_CA_FILE=/etc/ssl/certs/ca-certificates.crt
-#SMTP_OPENSSL_VERIFY_MODE=peer
-#SMTP_ENABLE_STARTTLS_AUTO=true
-#SMTP_TLS=true
+# SMTP_SERVER=smtp.mailgun.org
+# SMTP_PORT=587
+# SMTP_LOGIN=
+# SMTP_PASSWORD=
+# SMTP_FROM_ADDRESS=notifications@example.com
+# SMTP_DOMAIN= # defaults to LOCAL_DOMAIN
+# SMTP_DELIVERY_METHOD=smtp # delivery method can also be sendmail
+# SMTP_AUTH_METHOD=plain
+# SMTP_CA_FILE=/etc/ssl/certs/ca-certificates.crt
+# SMTP_OPENSSL_VERIFY_MODE=peer
+# SMTP_ENABLE_STARTTLS_AUTO=true
+# SMTP_TLS=true
 
 # Optional user upload path and URL (images, avatars). Default is :rails_root/public/system. If you set this variable, you are responsible for making your HTTP server (eg. nginx) serve these files.
 # PAPERCLIP_ROOT_PATH=/var/lib/mastodon/public-system
