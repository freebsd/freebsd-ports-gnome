#!/bin/sh
#
# $FreeBSD$
#
# PROVIDE: geodns
# REQUIRE: cleanvar SERVERS
#
# Options to configure geodns via /etc/rc.conf:
#
# geodns_enable (bool):
#   Enable service on boot.
#   Default: NO
#
# geodns_conf (str):
#   Config file to use.
#   Default: %%PREFIX%%/etc/geodns.conf
#
# geodns_addr (str):
#   Specify which IP address to listen to.
#   Default: [::], 0.0.0.0
#
# geodns_port (str):
#   Specify which port to listen on.
#   Default: 5353
#
# geodns_suexec (bool):
#   Run geodns as root.
#   Default: NO
#
# geodns_uid (str):
#   User to run geodns as.
#   Default: %%USER%%
#
# geodns_zones (str):
#   Zone files directory.
#   Default: %%ETCDIR%%
#
# geodns_mac_portacl_enable (bool):
#   Load mac_portacl module (network port access control policy).
#   Default: NO
#

. /etc/rc.subr

name="geodns"
rcvar="geodns_enable"
pidfile="/var/run/geodns.pid"
procname="%%PREFIX%%/sbin/geodns"

load_rc_config $name

: ${geodns_enable:="NO"}
: ${geodns_conf:="%%PREFIX%%/etc/geodns.conf"}
: ${geodns_addr:=""}
: ${geodns_port:="5353"}
: ${geodns_suexec:="NO"}
: ${geodns_uid:="%%USER%%"}
: ${geodns_zones:="%%ETCDIR%%"}
: ${geodns_mac_portacl_enable:="NO"}

checkyesno geodns_suexec && geodns_uid="root"

command="/usr/sbin/daemon"

command_args="-p ${pidfile} -t ${name} -u ${geodns_uid} -f ${procname} -configfile ${geodns_conf} -config ${geodns_zones} -port ${geodns_port}"

if [ ! -z ${geodns_addr} ]; then
	command_args="${command_args} -interface ${geodns_addr}"
fi

start_precmd="geodns_precmd"

geodns_precmd() {
	local reservedlow reservedhigh rules_current rules_geodns rport ruid

	if checkyesno geodns_mac_portacl_enable ; then

		# Check and load mac_portacl module
		if ! kldstat -m mac_portacl >/dev/null 2>&1 ; then
			if ! kldload mac_portacl ; then
				warn "Could not load mac_portacl module."
				return 1
			fi
		fi

		# Check and add mac_portacl rules
		ruid=$(id -u $geodns_uid)
		rport=$geodns_port #smaller variable
		rules_current=$(sysctl -n security.mac.portacl.rules)
		rules_geodns="uid:${ruid}:tcp:${rport},uid:${ruid}:udp:${rport}"
		if [ ! $rules_current = "" ]; then
			if ! echo $rules_current | grep "$rules_geodns" >/dev/null 2>&1 ; then
				rules_current="${rules_current},${rules_geodns}"
				if ! sysctl security.mac.portacl.rules="$rules_current" >/dev/null 2>&1 ; then
					warn "Could not insert mac_portacl rules."
					return 1
				fi
			fi
		elif ! sysctl security.mac.portacl.rules=$rules_geodns >/dev/null 2>&1 ; then
			warn "Could not insert mac_portacl rules."
			return 1
		fi

		# Check and disable net.inet.ip.portrange.* control
		reservedlow=$(sysctl -n net.inet.ip.portrange.reservedlow)
		reservedhigh=$(sysctl -n net.inet.ip.portrange.reservedhigh)
		if [ ! $reservedlow -eq 0 ]; then
			if ! sysctl net.inet.ip.portrange.reservedlow=0 >/dev/null 2>&1 ; then
				warn "Could not change net.inet.ip.portrange.reservedlow."
				return 1
			fi
		fi
		if [ ! $reservedhigh -eq 0 ]; then
			if ! sysctl net.inet.ip.portrange.reservedhigh=0 >/dev/null 2>&1 ; then
				warn "Could not change net.inet.ip.portrange.reservedhigh."
				return 1
			fi
		fi

	fi # geodns_mac_portacl_enable
}

run_rc_command $1
