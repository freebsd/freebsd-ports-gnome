Revert https://github.com/RPCS3/rpcs3/commit/cf1c45dfe86e for Qt 5.7 compatibility

--- rpcs3/CMakeLists.txt.orig	2018-03-13 15:55:03 UTC
+++ rpcs3/CMakeLists.txt
@@ -6,12 +6,12 @@ set(CMAKE_CXX_STANDARD 14)
 include(CheckCXXCompilerFlag)
 
 # Qt section
-find_package(Qt5 5.10 COMPONENTS Widgets Network Qml)
+find_package(Qt5 5.7 COMPONENTS Widgets Network Qml)
 if(WIN32)
 	find_package(Qt5 5.10 COMPONENTS WinExtras REQUIRED)
 	set(RPCS3_QT_LIBS Qt5::Widgets Qt5::WinExtras Qt5::Network Qt5::Qml)
 else()
-	find_package(Qt5 5.10 COMPONENTS DBus Gui)
+	find_package(Qt5 5.7 COMPONENTS DBus Gui)
 	if(Qt5DBus_FOUND)
 		set(RPCS3_QT_LIBS Qt5::Widgets Qt5::DBus Qt5::Network Qt5::Qml)
 		add_definitions(-DHAVE_QTDBUS)
--- rpcs3/main.cpp.orig	2018-02-21 20:18:14 UTC
+++ rpcs3/main.cpp
@@ -86,7 +86,6 @@ int main(int argc, char** argv)
 #endif
 
 	QCoreApplication::setAttribute(Qt::AA_UseHighDpiPixmaps);
-	QCoreApplication::setAttribute(Qt::AA_DisableWindowContextHelpButton);
 
 	s_init.post();
 	s_qt_mutex.wait();
--- rpcs3/rpcs3qt/about_dialog.cpp.orig	2018-02-21 20:18:14 UTC
+++ rpcs3/rpcs3qt/about_dialog.cpp
@@ -23,6 +23,7 @@ about_dialog::about_dialog(QWidget* parent) : QDialog(
 	connect(ui->patreon, &QAbstractButton::clicked, [] { QDesktopServices::openUrl(QUrl("https://www.patreon.com/Nekotekina")); });
 	connect(ui->close, &QAbstractButton::clicked, this, &QWidget::close);
 
+	setWindowFlags(windowFlags() & ~Qt::WindowContextHelpButtonHint);
 	layout()->setSizeConstraint(QLayout::SetFixedSize);
 }
 
--- rpcs3/rpcs3qt/auto_pause_settings_dialog.cpp.orig	2018-02-21 20:18:14 UTC
+++ rpcs3/rpcs3qt/auto_pause_settings_dialog.cpp
@@ -5,6 +5,8 @@ constexpr auto qstr = QString::fromStdString;
 
 auto_pause_settings_dialog::auto_pause_settings_dialog(QWidget *parent) : QDialog(parent)
 {
+	setWindowFlags(windowFlags() & ~Qt::WindowContextHelpButtonHint);
+
 	QLabel *description = new QLabel(tr("To use auto pause: enter the ID(s) of a function or a system call.\nRestart of the game is required to apply. You can enable/disable this in the settings."), this);
 
 	pauseList = new QTableWidget(this);
--- rpcs3/rpcs3qt/find_dialog.cpp.orig	2018-02-21 20:18:14 UTC
+++ rpcs3/rpcs3qt/find_dialog.cpp
@@ -5,6 +5,7 @@
 find_dialog::find_dialog(QTextEdit* edit, QWidget *parent, Qt::WindowFlags f) : QDialog(parent, f), m_text_edit(edit)
 {
 	setWindowTitle(tr("Find string"));
+	setWindowFlags(windowFlags() & ~Qt::WindowContextHelpButtonHint);
 
 	m_find_bar = new QLineEdit();
 	m_find_bar->setPlaceholderText(tr("Search..."));
--- rpcs3/rpcs3qt/gamepads_settings_dialog.cpp.orig	2018-02-21 20:18:14 UTC
+++ rpcs3/rpcs3qt/gamepads_settings_dialog.cpp
@@ -76,6 +76,7 @@ gamepads_settings_dialog::gamepads_settings_dialog(QWi
 	json_file.open(QIODevice::ReadOnly | QIODevice::Text);
 	QJsonObject json_input = QJsonDocument::fromJson(json_file.readAll()).object().value("input").toObject();
 	json_file.close();
+	setWindowFlags(windowFlags() & ~Qt::WindowContextHelpButtonHint);
 
 	QVBoxLayout *dialog_layout = new QVBoxLayout();
 	QHBoxLayout *all_players = new QHBoxLayout();
--- rpcs3/rpcs3qt/gui_settings.cpp.orig	2018-02-28 19:44:06 UTC
+++ rpcs3/rpcs3qt/gui_settings.cpp
@@ -259,6 +259,7 @@ void gui_settings::ShowInfoBox(const gui_save& entry, 
 	if (GetValue(entry).toBool())
 	{
 		QMessageBox* mb = new QMessageBox(QMessageBox::Information, title, text, QMessageBox::Ok, parent);
+		mb->setWindowFlags(mb->windowFlags() & ~Qt::WindowContextHelpButtonHint);
 		mb->setCheckBox(new QCheckBox(tr("Don't show again")));
 		mb->deleteLater();
 		mb->exec();
--- rpcs3/rpcs3qt/instruction_editor_dialog.cpp.orig	2018-02-21 20:18:14 UTC
+++ rpcs3/rpcs3qt/instruction_editor_dialog.cpp
@@ -14,6 +14,7 @@ instruction_editor_dialog::instruction_editor_dialog(Q
 {
 	setWindowTitle(tr("Edit instruction"));
 	setAttribute(Qt::WA_DeleteOnClose);
+	setWindowFlags(windowFlags() & ~Qt::WindowContextHelpButtonHint);
 	setMinimumSize(300, sizeHint().height());
 
 	const auto cpu = _cpu.get();
--- rpcs3/rpcs3qt/kernel_explorer.cpp.orig	2018-02-21 20:18:14 UTC
+++ rpcs3/rpcs3qt/kernel_explorer.cpp
@@ -30,6 +30,7 @@ kernel_explorer::kernel_explorer(QWidget* parent) : QD
 	setWindowTitle(tr("Kernel Explorer"));
 	setObjectName("kernel_explorer");
 	setAttribute(Qt::WA_DeleteOnClose);
+	setWindowFlags(windowFlags() & ~Qt::WindowContextHelpButtonHint);
 	setMinimumSize(QSize(700, 450));
 
 	QVBoxLayout* vbox_panel = new QVBoxLayout();
--- rpcs3/rpcs3qt/memory_string_searcher.cpp.orig	2018-02-21 20:18:14 UTC
+++ rpcs3/rpcs3qt/memory_string_searcher.cpp
@@ -8,6 +8,7 @@ memory_string_searcher::memory_string_searcher(QWidget
 {
 	setWindowTitle(tr("String Searcher"));
 	setAttribute(Qt::WA_DeleteOnClose);
+	setWindowFlags(windowFlags() & ~Qt::WindowContextHelpButtonHint);
 
 	m_addr_line = new QLineEdit(this);
 	m_addr_line->setFixedWidth(QLabel("This is the very length of the lineedit due to hidpi reasons.").sizeHint().width());
--- rpcs3/rpcs3qt/memory_viewer_panel.cpp.orig	2018-02-21 20:18:14 UTC
+++ rpcs3/rpcs3qt/memory_viewer_panel.cpp
@@ -11,6 +11,7 @@ memory_viewer_panel::memory_viewer_panel(QWidget* pare
 	setWindowTitle(tr("Memory Viewer"));
 	setObjectName("memory_viewer");
 	setAttribute(Qt::WA_DeleteOnClose);
+	setWindowFlags(windowFlags() & ~Qt::WindowContextHelpButtonHint);
 	exit = false;
 	m_addr = 0;
 	m_colcount = 16;
--- rpcs3/rpcs3qt/msg_dialog_frame.cpp.orig	2018-02-21 20:18:14 UTC
+++ rpcs3/rpcs3qt/msg_dialog_frame.cpp
@@ -24,6 +24,7 @@ void msg_dialog_frame::Create(const std::string& msg)
 
 	m_dialog = new custom_dialog(type.disable_cancel);
 	m_dialog->setWindowTitle(type.se_normal ? "Normal dialog" : "Error dialog");
+	m_dialog->setWindowFlags(m_dialog->windowFlags() & ~Qt::WindowContextHelpButtonHint);
 	m_dialog->setWindowOpacity(type.bg_invisible ? 1. : 0.75);
 
 	m_text = new QLabel(qstr(msg));
@@ -245,6 +246,7 @@ void msg_dialog_frame::CreateOsk(const std::string& ms
 
 	//Title
 	m_osk_dialog->setWindowTitle(qstr(msg));
+	m_osk_dialog->setWindowFlags(m_osk_dialog->windowFlags() & ~Qt::WindowContextHelpButtonHint);
 
 	//Text Input
 	QLineEdit* input = new QLineEdit(m_osk_dialog);
--- rpcs3/rpcs3qt/pad_settings_dialog.cpp.orig	2018-02-21 20:18:14 UTC
+++ rpcs3/rpcs3qt/pad_settings_dialog.cpp
@@ -18,6 +18,8 @@ pad_settings_dialog::pad_settings_dialog(const std::st
 {
 	ui->setupUi(this);
 
+	setWindowFlags(windowFlags() & ~Qt::WindowContextHelpButtonHint);
+
 	ui->b_cancel->setDefault(true);
 	connect(ui->b_cancel, &QAbstractButton::clicked, this, &QWidget::close);
 
--- rpcs3/rpcs3qt/register_editor_dialog.cpp.orig	2018-02-21 20:18:14 UTC
+++ rpcs3/rpcs3qt/register_editor_dialog.cpp
@@ -13,6 +13,7 @@ register_editor_dialog::register_editor_dialog(QWidget
 {
 	setWindowTitle(tr("Edit registers"));
 	setAttribute(Qt::WA_DeleteOnClose);
+	setWindowFlags(windowFlags() & ~Qt::WindowContextHelpButtonHint);
 
 	QVBoxLayout* vbox_panel = new QVBoxLayout();
 	QHBoxLayout* hbox_panel = new QHBoxLayout();
--- rpcs3/rpcs3qt/rsx_debugger.cpp.orig	2018-02-21 20:18:14 UTC
+++ rpcs3/rpcs3qt/rsx_debugger.cpp
@@ -18,6 +18,7 @@ rsx_debugger::rsx_debugger(QWidget* parent)
 {
 	setWindowTitle(tr("RSX Debugger"));
 	setAttribute(Qt::WA_DeleteOnClose);
+	setWindowFlags(windowFlags() & ~Qt::WindowContextHelpButtonHint);
 
 	//Fonts and Colors
 	QFont mono = QFontDatabase::systemFont(QFontDatabase::FixedFont);
--- rpcs3/rpcs3qt/save_data_info_dialog.cpp.orig	2018-02-21 20:18:14 UTC
+++ rpcs3/rpcs3qt/save_data_info_dialog.cpp
@@ -9,6 +9,7 @@ constexpr auto qstr = QString::fromStdString;
 save_data_info_dialog::save_data_info_dialog(const SaveDataEntry& save, QWidget* parent)
 	: QDialog(parent), m_entry(save)
 {
+	setWindowFlags(windowFlags() & ~Qt::WindowContextHelpButtonHint);
 	setWindowTitle(tr("Save Data Information"));
 
 	// Table
--- rpcs3/rpcs3qt/save_data_list_dialog.cpp.orig	2018-02-21 20:18:14 UTC
+++ rpcs3/rpcs3qt/save_data_list_dialog.cpp
@@ -16,6 +16,8 @@ constexpr auto qstr = QString::fromStdString;
 save_data_list_dialog::save_data_list_dialog(const std::vector<SaveDataEntry>& entries, s32 focusedEntry, u32 op, vm::ptr<CellSaveDataListSet> listSet, QWidget* parent)
 	: QDialog(parent), m_save_entries(entries), m_entry(selection_code::new_save), m_entry_label(nullptr)
 {
+	setWindowFlags(windowFlags() & ~Qt::WindowContextHelpButtonHint);
+
 	if (op >= 8)
 	{
 		setWindowTitle(tr("Save Data Interface (Delete)"));
--- rpcs3/rpcs3qt/save_manager_dialog.cpp.orig	2018-02-21 20:18:14 UTC
+++ rpcs3/rpcs3qt/save_manager_dialog.cpp
@@ -81,6 +81,7 @@ namespace
 save_manager_dialog::save_manager_dialog(std::shared_ptr<gui_settings> gui_settings, std::string dir, QWidget* parent)
 	: QDialog(parent), m_save_entries(), m_dir(dir), m_sort_column(1), m_sort_ascending(true), m_gui_settings(gui_settings)
 {
+	setWindowFlags(windowFlags() & ~Qt::WindowContextHelpButtonHint);
 	setWindowTitle(tr("Save Manager"));
 	setMinimumSize(QSize(400, 400));
 
--- rpcs3/rpcs3qt/settings_dialog.cpp.orig	2018-02-21 20:18:14 UTC
+++ rpcs3/rpcs3qt/settings_dialog.cpp
@@ -30,6 +30,8 @@ inline std::string sstr(const QVariant& _in) { return 
 settings_dialog::settings_dialog(std::shared_ptr<gui_settings> guiSettings, std::shared_ptr<emu_settings> emuSettings, const int& tabIndex, QWidget *parent, const GameInfo* game)
 	: QDialog(parent), xgui_settings(guiSettings), xemu_settings(emuSettings), ui(new Ui::settings_dialog), m_tab_Index(tabIndex)
 {
+	setWindowFlags(windowFlags() & ~Qt::WindowContextHelpButtonHint);
+
 	ui->setupUi(this);
 	ui->cancelButton->setFocus();
 	ui->tabWidget->setUsesScrollButtons(false);
--- rpcs3/rpcs3qt/trophy_manager_dialog.cpp.orig	2018-02-21 20:18:14 UTC
+++ rpcs3/rpcs3qt/trophy_manager_dialog.cpp
@@ -40,6 +40,7 @@ trophy_manager_dialog::trophy_manager_dialog(std::shar
 	: QWidget(), m_sort_column(0), m_col_sort_order(Qt::AscendingOrder), m_gui_settings(gui_settings)
 {
 	// Nonspecific widget settings
+	setWindowFlags(windowFlags() & ~Qt::WindowContextHelpButtonHint);
 	setWindowTitle(tr("Trophy Manager"));
 
 	m_icon_height            = m_gui_settings->GetValue(gui::tr_icon_height).toInt();
--- rpcs3/rpcs3qt/vfs_dialog.cpp.orig	2018-02-21 20:18:14 UTC
+++ rpcs3/rpcs3qt/vfs_dialog.cpp
@@ -83,4 +83,5 @@ vfs_dialog::vfs_dialog(std::shared_ptr<gui_settings> g
 
 	setLayout(vbox);
 	setWindowTitle(tr("Virtual File System"));
+	setWindowFlags(windowFlags() & ~Qt::WindowContextHelpButtonHint);
 }
--- rpcs3/rpcs3qt/welcome_dialog.cpp.orig	2018-02-21 20:18:14 UTC
+++ rpcs3/rpcs3qt/welcome_dialog.cpp
@@ -15,7 +15,7 @@ welcome_dialog::welcome_dialog(QWidget* parent) : QDia
 {
 	ui->setupUi(this);
 
-	setWindowFlags(windowFlags() & Qt::WindowTitleHint);
+	setWindowFlags(windowFlags() & Qt::WindowTitleHint & ~Qt::WindowContextHelpButtonHint);
 
 	gui_settings* settings = new gui_settings(this);
 
