--- SConstruct.orig	2015-04-21 11:32:43.000000000 -0400
+++ SConstruct	2018-03-11 21:17:31.106873000 -0400
@@ -534,6 +534,9 @@
 main['LTO_CCFLAGS'] = []
 main['LTO_LDFLAGS'] = []
 
+# Add pthread
+main.Append(LIBS=['pthread'])
+
 # According to the readme, tcmalloc works best if the compiler doesn't
 # assume that we're using the builtin malloc and friends. These flags
 # are compiler-specific, so we need to set them after we detect which
@@ -785,13 +788,8 @@
 swig_flags=Split('-c++ -python -modern -templatereduce $_CPPINCFLAGS')
 main.Append(SWIGFLAGS=swig_flags)
 
-# Check for 'timeout' from GNU coreutils. If present, regressions will
-# be run with a time limit. We require version 8.13 since we rely on
-# support for the '--foreground' option.
-timeout_lines = readCommand(['timeout', '--version'],
-                            exception='').splitlines()
-# Get the first line and tokenize it
-timeout_version = timeout_lines[0].split() if timeout_lines else []
+# It expects GNU timeout, FreeBSD one (on 11.x+) is not compatible
+timeout_version = []
 main['TIMEOUT'] =  timeout_version and \
     compareVersions(timeout_version[-1], '8.13') >= 0
 
@@ -922,8 +920,8 @@
     # version of python, see above for instructions on how to invoke
     # scons with the appropriate PATH set.
     #
-    # First we check if python2-config exists, else we use python-config
-    python_config = readCommand(['which', 'python2-config'],
+    # First we check if python2.7-config exists, else we use python-config
+    python_config = readCommand(['which', 'python2.7-config'],
                                 exception='').strip()
     if not os.path.exists(python_config):
         python_config = readCommand(['which', 'python-config'],
