'\" t
.\"     Title: ctdbd
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 11/20/2017
.\"    Manual: CTDB - clustered TDB database
.\"    Source: ctdb
.\"  Language: English
.\"
.TH "CTDBD" "1" "11/20/2017" "ctdb" "CTDB \- clustered TDB database"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
ctdbd \- The CTDB cluster daemon
.SH "SYNOPSIS"
.HP \w'\fBctdbd\fR\ 'u
\fBctdbd\fR [\fIOPTION\fR...]
.SH "DESCRIPTION"
.PP
ctdbd is the main CTDB daemon\&.
.PP
Note that ctdbd is not usually invoked directly\&. It is invoked via
\fBctdbd_wrapper\fR(1)
or via the initscript\&.
.PP
See
\fBctdb\fR(7)
for an overview of CTDB\&.
.SH "GENERAL OPTIONS"
.PP
\-d, \-\-debug=\fIDEBUGLEVEL\fR
.RS 4
This option sets the debug level to DEBUGLEVEL, which controls what will be written by the logging subsystem\&. The default is 2\&.
.sp
See the
DEBUG LEVELS
section in
\fBctdb\fR(7)
for more information\&.
.RE
.PP
\-\-dbdir=\fIDIRECTORY\fR
.RS 4
DIRECTORY on local storage where ctdbd keeps a local copy of TDB databases\&. This directory is local for each node and should not be stored on the shared cluster filesystem\&.
.sp
Defaults to
/usr/local/var/lib/ctdb\&.
.RE
.PP
\-\-dbdir\-persistent=\fIDIRECTORY\fR
.RS 4
DIRECTORY on local storage where ctdbd keeps a local copy of persistent TDB databases\&. This directory is local for each node and should not be stored on the shared cluster filesystem\&.
.sp
Defaults to
/usr/local/var/lib/ctdb/persistent\&.
.RE
.PP
\-\-dbdir\-state=\fIDIRECTORY\fR
.RS 4
DIRECTORY on local storage where ctdbd keep internal state TDB files\&. This directory is local for each node and should not be stored on the shared cluster filesystem\&.
.sp
Defaults to
/usr/local/var/lib/ctdb/state\&.
.RE
.PP
\-\-event\-script\-dir=\fIDIRECTORY\fR
.RS 4
DIRECTORY where the CTDB event scripts are stored\&. See the
EVENT SCRIPTS
section in
\fBctdb\fR(7)
for more information\&.
.sp
Default is
\fBCTDB_BASE\fR/events\&.d, so usually
/usr/local/etc/ctdb/events\&.d, which is part of the CTDB installation\&.
.RE
.PP
\-\-listen=\fIIPADDR\fR
.RS 4
IPADDR is the private IP address that ctdbd will bind to\&.
.sp
By default ctdbd will select the first address from the nodes list that in can bind to\&. See also
\-\-nlist\&.
.sp
This option is only required when automatic address detection can not be used\&. This can be the case when running multiple ctdbd daemons/nodes on the same physical host (usually for testing), using InfiniBand for the private network or on Linux when sysctl net\&.ipv4\&.ip_nonlocal_bind=1\&.
.RE
.PP
\-\-logging=\fISTRING\fR
.RS 4
STRING specifies where ctdbd will write its log\&. The default is file:/usr/local/var/log/log\&.ctdb\&.
.sp
Valid values are:
.PP
file:\fIFILENAME\fR
.RS 4
FILENAME where ctdbd will write its log\&. This is usually
/usr/local/var/log/log\&.ctdb\&.
.RE
.PP
syslog[:\fIMETHOD\fR]
.RS 4
CTDB will log to syslog\&. By default this will use the syslog(3) API\&.
.sp
Under heavy loads syslog(3) can block if the syslog daemon processes messages too slowly\&. This can cause CTDB to block when logging\&.
.sp
If METHOD is specified then it specifies an extension that causes logging to be done in a non\-blocking mode\&. Note that
\fIthis may cause messages to be dropped\fR\&. METHOD must be one of:
.PP
nonblocking
.RS 4
CTDB will log to syslog via
/dev/log
in non\-blocking mode\&.
.RE
.PP
udp
.RS 4
CTDB will log to syslog via UDP to localhost:514\&. The syslog daemon must be configured to listen on (at least) localhost:514\&. Most syslog daemons will log the messages with hostname "localhost" \- this is a limitation of the implementation, for compatibility with more syslog daemons\&.
.RE
.PP
udp\-rfc5424
.RS 4
As with "udp" but messages are sent in RFC5424 format\&. This method will log the correct hostname but is not as widely implemented in syslog daemons\&.
.RE
.RE
.RE
.PP
\-\-max\-persistent\-check\-errors=\fINUM\fR
.RS 4
NUM specifies the maximum number of health check failures allowed for persistent databases during startup\&.
.sp
The default value is 0\&. Setting this to non\-zero allows a node with unhealthy persistent databases to startup and join the cluster as long as there is another node with healthy persistent databases\&.
.RE
.PP
\-\-nlist=\fIFILENAME\fR
.RS 4
FILENAME containing a list of the private IP addresses, one per line, for each node in the cluster\&. This file
\fImust be the same on each node\fR
in the cluster\&.
.sp
Default is
\fBCTDB_BASE\fR/nodes, so usually
/usr/local/etc/ctdb/nodes\&.
.RE
.PP
\-\-no\-lmaster
.RS 4
This argument specifies that this node can NOT become an lmaster for records in the database\&. This means that it will never show up in the vnnmap\&. This feature is primarily used for making a cluster span across a WAN link and use CTDB as a WAN\-accelerator\&.
.sp
Please see the
REMOTE CLUSTER NODES
section in
\fBctdb\fR(7)
for more information\&.
.RE
.PP
\-\-no\-recmaster
.RS 4
This argument specifies that this node can NOT become a recmaster for the database\&. This feature is primarily used for making a cluster span across a WAN link and use CTDB as a WAN\-accelerator\&.
.sp
Please see the
REMOTE CLUSTER NODES
section in
\fBctdb\fR(7)
for more information\&.
.RE
.PP
\-\-notification\-script=\fIFILENAME\fR
.RS 4
FILENAME specifying a script to be invoked by ctdbd when certain state changes occur\&.
.sp
This file is usually
/usr/local/etc/ctdb/notify\&.sh\&.
.sp
Please see the
NOTIFICATION SCRIPT
section in
\fBctdb\fR(7)
for more information\&.
.RE
.PP
\-\-pidfile=\fIFILENAME\fR
.RS 4
FILENAME for file containing process ID of main CTDB daemon\&. This file is automatically created and removed by CTDB\&.
.sp
The default is to not create a PID file\&.
.RE
.PP
\-\-public_addresses=\fIFILENAME\fR
.RS 4
FILENAME specifying a file containing the public IP addresses to use on the cluster when CTDB should use IP takeover\&. This file contains a list of IP addresses, netmasks and interfaces\&. CTDB will distribute these public IP addresses appropriately across the available nodes\&.
.sp
The IP addresses specified in this file can differ across nodes\&.
.sp
This is usually the file
/usr/local/etc/ctdb/public_addresses
.RE
.PP
\-\-public\-interface=\fIINTERFACE\fR
.RS 4
Default INTERFACE on which to attach public IP addresses\&.
.sp
When using public IP addresses, this is only required if interfaces are not explicitly specified in the public addresses file\&.
.RE
.PP
\-\-reclock=\fILOCK\fR
.RS 4
LOCK specifies the cluster\-wide mutex used to detect and prevent a partitioned cluster (or "split brain")\&.
.sp
For information about the recovery lock please see the
RECOVERY LOCK
section in
\fBctdb\fR(7)\&.
.RE
.PP
\-\-start\-as\-disabled
.RS 4
This makes ctdbd start in the DISABLED state\&.
.sp
To allow the node to host public IP addresses and services, it must be manually enabled using the
\fBctdb enable\fR
command\&.
.sp
Please see the
NODE STATES
section in
\fBctdb\fR(7)
for more information about the DISABLED state\&.
.RE
.PP
\-\-start\-as\-stopped
.RS 4
This makes ctdbd start in the STOPPED state\&.
.sp
To allow the node to take part in the cluster it must be manually continued with the the
\fBctdb enable\fR
command\&.
.sp
Please see the
NODE STATES
section in
\fBctdb\fR(7)
for more information about the STOPPED state\&.
.RE
.PP
\-\-transport=tcp|infiniband
.RS 4
This option specifies which transport to use for ctdbd internode communications\&. The default is "tcp"\&.
.sp
The "infiniband" support is not regularly tested\&.
.RE
.PP
\-?, \-\-help
.RS 4
Display a summary of options\&.
.RE
.SH "DEBUGGING OPTIONS"
.PP
\-i, \-\-interactive
.RS 4
Enable interactive mode\&. This will make ctdbd run in the foreground and not detach from the terminal\&. By default ctdbd will detach itself and run in the background as a daemon\&.
.RE
.PP
\-\-nopublicipcheck
.RS 4
This option is used when testing with multiple local daemons on a single machine\&. It disables checks related to public IP addresses\&.
.RE
.PP
\-\-nosetsched
.RS 4
This is a debugging option\&. This option is only used when debugging ctdbd\&.
.sp
Normally ctdbd will change its scheduler to run as a real\-time process\&. This is the default mode for a normal ctdbd operation to gurarantee that ctdbd always gets the CPU cycles that it needs\&.
.sp
This option is used to tell ctdbd to
\fInot\fR
run as a real\-time process and instead run ctdbd as a normal userspace process\&. This is useful for debugging and when you want to run ctdbd under valgrind or gdb\&. (You don\*(Aqt want to attach valgrind or gdb to a real\-time process\&.)
.RE
.PP
\-\-socket=\fIFILENAME\fR
.RS 4
FILENAME specifies the name of the Unix domain socket that ctdbd will create\&. This socket is used by local clients to communicate with ctdbd\&.
.sp
The default is
/usr/local/var/run/ctdb/ctdbd\&.socket\&. You only need to use this option if you plan to run multiple ctdbd daemons on the same physical host, usually for testing\&.
.RE
.PP
\-\-script\-log\-level=\fIDEBUGLEVEL\fR
.RS 4
This option sets the debug level of event script output to DEBUGLEVEL\&. The default is ERR\&.
.sp
See the
DEBUG LEVELS
section in
\fBctdb\fR(7)
for more information\&.
.RE
.PP
\-\-sloppy\-start
.RS 4
This is debugging option\&. This speeds up the initial recovery during startup at the expense of some consistency checking\&.
\fIDon\*(Aqt use this option in production\fR\&.
.RE
.PP
\-\-torture
.RS 4
This option is only used for development and testing of CTDB\&. It adds artificial errors and failures to the common codepaths in ctdbd to verify that ctdbd can recover correctly from failures\&.
.sp
\fIDo not use this option\fR
unless you are developing and testing new functionality in CTDB\&.
.RE
.PP
\-\-valgrinding
.RS 4
This is a debugging option\&. This option is only used when debugging ctdbd\&. This enables additional debugging capabilities and implies \-\-nosetsched\&.
.RE
.SH "SEE ALSO"
.PP
\fBctdb\fR(1),
\fBctdbd_wrapper\fR(1),
\fBonnode\fR(1),
\fBctdb\fR(7),
\fBctdb-tunables\fR(7),
\m[blue]\fB\%http://ctdb.samba.org/\fR\m[]
.SH "AUTHOR"
.br
.PP
This documentation was written by Ronnie Sahlberg, Amitay Isaacs, Martin Schwenke
.SH "COPYRIGHT"
.br
Copyright \(co 2007 Andrew Tridgell, Ronnie Sahlberg
.br
.PP
This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 3 of the License, or (at your option) any later version\&.
.PP
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\&. See the GNU General Public License for more details\&.
.PP
You should have received a copy of the GNU General Public License along with this program; if not, see
\m[blue]\fB\%http://www.gnu.org/licenses\fR\m[]\&.
.sp
